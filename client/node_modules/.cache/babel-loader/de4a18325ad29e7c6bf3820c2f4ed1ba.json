{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\PostImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getimagePost } from \"../../actions/post\";\nimport PostItem from \"../../components/posts/PostItem\";\n\nconst ImagePost = ({\n  auth,\n  getimagePost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getimagePost(match.params.id, match.params.articleImage);\n  }, [getimagePost, match.params.id, match.params.articleImage]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large\",\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImagePost;\nImagePost.propTypes = {\n  getimagePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getimagePost\n})(ImagePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePost\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/PostImage.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getimagePost","PostItem","ImagePost","auth","post","loading","match","params","id","articleImage","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQH,EAAAA,YAAR;AAAsBI,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA5B;AAA+CC,EAAAA;AAA/C,CAAD,KAA4D;AAAA;;AAC5EV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,EAAkBF,KAAK,CAACC,MAAN,CAAaE,YAA/B,CAAZ;AACD,GAFQ,EAEN,CAACT,YAAD,EAAeM,KAAK,CAACC,MAAN,CAAaC,EAA5B,EAAgCF,KAAK,CAACC,MAAN,CAAaE,YAA7C,CAFM,CAAT;AAIA,SAAOJ,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAUD,CAfD;;GAAMF,S;;KAAAA,S;AAiBNA,SAAS,CAACQ,SAAV,GAAsB;AACpBV,EAAAA,YAAY,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADT;AAEpBR,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBD;AAFH,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getimagePost } from \"../../actions/post\";\r\nimport PostItem from \"../../components/posts/PostItem\";\r\n\r\nconst ImagePost = ({ auth, getimagePost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getimagePost(match.params.id, match.params.articleImage);\r\n  }, [getimagePost, match.params.id, match.params.articleImage]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className='posts'>\r\n        {/* <img src={`/img/${articleImage}`} alt='...' /> */}\r\n      </div>\r\n      <h1 className='large'>Test</h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImagePost.propTypes = {\r\n  getimagePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getimagePost })(ImagePost);\r\n"]},"metadata":{},"sourceType":"module"}
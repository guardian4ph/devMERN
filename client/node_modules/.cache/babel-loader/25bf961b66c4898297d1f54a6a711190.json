{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: [\" \", \"Edit Profile\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" Nothing to show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Nothing to show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/1App/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","ProfileTop","ProfileAbout","ProfileEducation","ProfileExperience","getProfileById","Profile","match","profile","loading","auth","params","id","isAuthenticated","user","_id","experience","length","map","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  match,\r\n  profile: { profile, loading },\r\n  auth,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                {\" \"}\r\n                Edit Profile{\" \"}\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n\r\n            {/* Experience */}\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h3 className='text-primary'>Experience</h3>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h5> Nothing to show </h5>\r\n              )}\r\n            </div>\r\n            {/* Education */}\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h3 className='text-primary'>Education</h3>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4> Nothing to show </h4>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\nimport { send } from \"../../utils/push\";\nimport io from \"socket.io-client\";\n\nconst PostForm = ({\n  addPost\n}) => {\n  _s();\n\n  //const [text, setText] = useState(\"\");\n  const [formData, setFormData] = useState({\n    text: \"\",\n    articleImage: \"\"\n  });\n  const [image, setImage] = useState(\"\");\n  const [imageName, setImageName] = useState(\"Choose file\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    setSocket(io(\"ws://localhost:8900\"));\n  }, []);\n  console.log(socket); // useEffect(() => {\n  //   socket?.on(\"welcome\", m => {\n  //     console.log(\"Socket Server\", m);\n  //   });\n  // }, [socket]);\n\n  const {\n    text\n  } = formData;\n\n  const onFileChange = c => {\n    setImage(c.target.files[0]);\n    setImageName(c.target.files[0].name);\n  };\n\n  const onChange = c => {\n    setFormData({ ...formData,\n      [c.target.name]: c.target.value\n    });\n  };\n\n  const payload = new FormData();\n  payload.append(\"text\", text);\n  payload.append(\"articleImage\", image);\n\n  const onSubmit = c => {\n    c.preventDefault();\n    addPost(payload);\n    setFormData({\n      text: \"\",\n      articleImage: \"\"\n    });\n    setImageName(\"Choose file\");\n    send(\"GUARDIAN NOTIFICATION\", `${text}`);\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      encType: \"multipart/form-data\",\n      onSubmit: c => onSubmit(c),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"2\",\n        placeholder: \"Create a post\",\n        value: text,\n        onChange: c => onChange(c),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-dark my-1\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \"Upload Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: c => onFileChange(c),\n          accept: \"image/*,video/mp4,video/x-m4v,video/*\",\n          single: true,\n          placeholder: imageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"zjaX+/JCvfdC2k2y6zevqpYWJD4=\");\n\n_c = PostForm;\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(PostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostForm.js"],"names":["React","useState","useEffect","PropTypes","connect","addPost","send","io","PostForm","formData","setFormData","text","articleImage","image","setImage","imageName","setImageName","socket","setSocket","console","log","onFileChange","c","target","files","name","onChange","value","payload","FormData","append","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\nimport { send } from \"../../utils/push\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  //const [text, setText] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    text: \"\",\r\n    articleImage: \"\",\r\n  });\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageName, setImageName] = useState(\"Choose file\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSocket(io(\"ws://localhost:8900\"));\r\n  }, []);\r\n\r\n  console.log(socket);\r\n  // useEffect(() => {\r\n  //   socket?.on(\"welcome\", m => {\r\n  //     console.log(\"Socket Server\", m);\r\n  //   });\r\n  // }, [socket]);\r\n\r\n  const { text } = formData;\r\n  const onFileChange = c => {\r\n    setImage(c.target.files[0]);\r\n    setImageName(c.target.files[0].name);\r\n  };\r\n\r\n  const onChange = c => {\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n  };\r\n\r\n  const payload = new FormData();\r\n  payload.append(\"text\", text);\r\n  payload.append(\"articleImage\", image);\r\n\r\n  const onSubmit = c => {\r\n    c.preventDefault();\r\n    addPost(payload);\r\n    setFormData({ text: \"\", articleImage: \"\" });\r\n    setImageName(\"Choose file\");\r\n    send(\"GUARDIAN NOTIFICATION\", `${text}`);\r\n  };\r\n\r\n  //\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <form\r\n        className='form my-1'\r\n        encType='multipart/form-data'\r\n        onSubmit={c => onSubmit(c)}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='2'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={c => onChange(c)}\r\n          required\r\n        ></textarea>\r\n\r\n        {/* add image button here */}\r\n        <div>\r\n          <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n          {/* <label htmlFor='file'> */}\r\n          Upload Photo\r\n          <input\r\n            type='file'\r\n            onChange={c => onFileChange(c)}\r\n            accept='image/*,video/mp4,video/x-m4v,video/*'\r\n            single\r\n            placeholder={imageName}\r\n          />\r\n          {/* </label> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident\\\\Incidents.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getIncidents } from \"../../actions/incident\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\nimport Clock from \"react-live-clock\";\nimport Moment from \"react-moment\";\nimport OpcenConsole from \"../opcens/OpcenConsole\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Incidents = ({\n  getIncidents,\n  incident: {\n    loading,\n    incidents\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getIncidents();\n    getOpcenProfileById();\n  }, []);\n  var date = new Date();\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(OpcenConsole, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Incidents, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Incidents;\nIncidents.propTypes = {\n  getIncidents: PropTypes.func.isRequired,\n  incident: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  incident: state.incident\n});\n\nconst mapDispatchToProps = {\n  getIncidents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\n\nvar _c;\n\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident/Incidents.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","getIncidents","getOpcenProfileById","Clock","Moment","OpcenConsole","Spinner","Incidents","incident","loading","incidents","date","Date","propTypes","func","isRequired","object","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEN,EAAAA,YAAF;AAAgBO,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAA1B,CAAD,KAAwD;AAAA;;AACxEb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACZC,IAAAA,mBAAmB;AACpB,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIS,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEA,SAAOH,OAAO,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,QAAD;AAAA,2BAgCE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAhCF;AAAA;AAAA;AAAA;AAAA,UAHF;AAsCD,CA9CD;;GAAMF,S;;KAAAA,S;AAgDNA,SAAS,CAACM,SAAV,GAAsB;AACpBZ,EAAAA,YAAY,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADT;AAEpBP,EAAAA,QAAQ,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,QAAQ,EAAEU,KAAK,CAACV;AADgB,CAAL,CAA7B;;AAIA,MAAMW,kBAAkB,GAAG;AAAElB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,SAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIncidents } from \"../../actions/incident\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\nimport Clock from \"react-live-clock\";\r\nimport Moment from \"react-moment\";\r\nimport OpcenConsole from \"../opcens/OpcenConsole\";\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Incidents = ({ getIncidents, incident: { loading, incidents } }) => {\r\n  useEffect(() => {\r\n    getIncidents();\r\n    getOpcenProfileById();\r\n  }, []);\r\n\r\n  var date = new Date();\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      {/* <div className='full'>\r\n        <div\r\n          style={{\r\n            width: \"95%\",\r\n            height: \"8%\",\r\n            display: \"flex\",\r\n            top: \"0px\",\r\n            // alignContent: \"center\",\r\n            // alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: \"10px\",\r\n            backgroundColor: \"#fff\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          <h1> CURRENT REPORTED INCIDENTS</h1>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h1>\r\n              <Moment format='ll'>{date}</Moment>\r\n            </h1>\r\n            <h1>, </h1>\r\n            <h1>\r\n              <Clock\r\n                format={\"HH:mm:ss\"}\r\n                ticking={true}\r\n                timezone={\"Asia/Manila\"}\r\n              />\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      <OpcenConsole />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nIncidents.propTypes = {\r\n  getIncidents: PropTypes.func.isRequired,\r\n  incident: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incident: state.incident,\r\n});\r\n\r\nconst mapDispatchToProps = { getIncidents };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\r\n"]},"metadata":{},"sourceType":"module"}
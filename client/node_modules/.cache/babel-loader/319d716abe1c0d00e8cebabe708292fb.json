{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\utils\\\\searchMap.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\n\nfunction Search({\n  panTo\n}) {\n  _s();\n\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 10.3272994,\n        lng: () => 123.9431079\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"block\",\n      margin: \"10px 20px 20px 20px\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Combobox, {\n      onSelect: async address => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n          const result = await getGeocode({\n            address\n          });\n          const {\n            lat,\n            lng\n          } = await getLatLng(result[0]);\n          panTo({\n            lat,\n            lng\n          }); // console.log(lat, lng);\n\n          console.log(result);\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n        className: \"input\",\n        value: value,\n        onChange: e => {\n          setValue(e.target.value);\n        },\n        disabled: !ready,\n        placeholder: \" Search nearest landmark or click map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n        children: /*#__PURE__*/_jsxDEV(ComboboxList, {\n          children: status === \"OK\" && data.map(({\n            id,\n            description\n          }) => /*#__PURE__*/_jsxDEV(ComboboxOption, {\n            value: description\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"R3daZp6xxcnKjHSG0aTOAykUFF4=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/1App/client/src/utils/searchMap.js"],"names":["React","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","usePlacesAutocomplete","getGeocode","getLatLng","Search","panTo","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","display","margin","width","address","result","console","log","error","e","target","map","id","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,iBANP;AAOA,OAAO,4BAAP;AACA,OAAOC,qBAAP,IACEC,UADF,EAEEC,SAFF,QAGO,yBAHP;;AAKA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA2B;AAAA;;AACzB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAHT;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFX,qBAAqB,CAAC;AACxBY,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,MAAM,UAAb;AAAyBC,QAAAA,GAAG,EAAE,MAAM;AAApC,OADI;AAEdC,MAAAA,MAAM,EAAE,MAAM;AAFA;AADQ,GAAD,CANzB;AAaA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,MAAM,EAAE,qBAA5B;AAAmDC,MAAAA,KAAK,EAAE;AAA1D,KADT;AAAA,2BAGE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,MAAMC,OAAN,IAAiB;AACzBV,QAAAA,QAAQ,CAACU,OAAD,EAAU,KAAV,CAAR;AACAT,QAAAA,gBAAgB;;AAChB,YAAI;AACF,gBAAMU,MAAM,GAAG,MAAMpB,UAAU,CAAC;AAAEmB,YAAAA;AAAF,WAAD,CAA/B;AACA,gBAAM;AAAEN,YAAAA,GAAF;AAAOC,YAAAA;AAAP,cAAe,MAAMb,SAAS,CAACmB,MAAM,CAAC,CAAD,CAAP,CAApC;AACAjB,UAAAA,KAAK,CAAC;AAAEU,YAAAA,GAAF;AAAOC,YAAAA;AAAP,WAAD,CAAL,CAHE,CAIF;;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,SAND,CAME,OAAOG,KAAP,EAAc;AACdF,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,OAbH;AAAA,8BAeE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,KAAK,EAAElB,KAFT;AAGE,QAAA,QAAQ,EAAEmB,CAAC,IAAI;AACbf,UAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASpB,KAAV,CAAR;AACD,SALH;AAME,QAAA,QAAQ,EAAE,CAACD,KANb;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAfF,eAyBE,QAAC,eAAD;AAAA,+BACE,QAAC,YAAD;AAAA,oBAEGG,MAAM,KAAK,IAAX,IACCC,IAAI,CAACkB,GAAL,CAAS,CAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA;AAAN,WAAD,kBACP,QAAC,cAAD;AAAyB,YAAA,KAAK,EAAEA;AAAhC,aAAqBD,EAArB;AAAA;AAAA;AAAA;AAAA,kBADF;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAvDQzB,M;UAOHH,qB;;;KAPGG,M;AAwDT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nfunction Search({ panTo }) {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 10.3272994, lng: () => 123.9431079 },\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"block\", margin: \"10px 20px 20px 20px\", width: \"100%\" }}\r\n    >\r\n      <Combobox\r\n        onSelect={async address => {\r\n          setValue(address, false);\r\n          clearSuggestions();\r\n          try {\r\n            const result = await getGeocode({ address });\r\n            const { lat, lng } = await getLatLng(result[0]);\r\n            panTo({ lat, lng });\r\n            // console.log(lat, lng);\r\n            console.log(result);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }}\r\n      >\r\n        <ComboboxInput\r\n          className='input'\r\n          value={value}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder=' Search nearest landmark or click map'\r\n        />\r\n\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {/* Suggestions  */}\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}
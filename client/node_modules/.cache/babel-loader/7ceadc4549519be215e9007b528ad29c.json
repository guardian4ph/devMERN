{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\PostImage.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost, getimagePost } from \"../../actions/post\";\n\nconst PostImage = ({\n  addLike,\n  removeLike,\n  deletePost,\n  getimagePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    articleImage,\n    avatar,\n    profilepic,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${_id}/${articleImage}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"315px\",\n          borderRadius: \"5px\"\n        },\n        src: `/img/${articleImage}`,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\" \", \"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"LLLL\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => removeLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => deletePost(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this); //console.log(PostItem);\n// set show action to true so buttons would not show in single post\n\n\n_c = PostImage;\nPostImage.defaultProps = {\n  showActions: true\n};\nPostImage.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getimagePost: PropTypes.func.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostImage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostImage\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/PostImage.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","getimagePost","PostImage","auth","post","_id","text","name","articleImage","avatar","profilepic","user","likes","comments","date","showActions","width","borderRadius","c","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  getimagePost,\r\n} from \"../../actions/post\";\r\n\r\nconst PostImage = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  getimagePost,\r\n  auth,\r\n  post: {\r\n    _id,\r\n    text,\r\n    name,\r\n    articleImage,\r\n    avatar,\r\n    profilepic,\r\n    user,\r\n    likes,\r\n    comments,\r\n    date,\r\n  },\r\n  showActions,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/posts/${_id}/${articleImage}`}>\r\n        <img\r\n          style={{ width: \"315px\", borderRadius: \"5px\" }}\r\n          src={`/img/${articleImage}`}\r\n          alt='...'\r\n        />\r\n      </Link>\r\n\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        {\" \"}\r\n        Posted on <Moment format='LLLL'>{date}</Moment>\r\n      </p>\r\n      {showActions && (\r\n        <Fragment>\r\n          {/* Button for like */}\r\n          <button\r\n            onClick={c => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up'></i>{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n\r\n          {/* Button for Unlike */}\r\n          <button\r\n            onClick={c => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={c => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n//console.log(PostItem);\r\n// set show action to true so buttons would not show in single post\r\nPostImage.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostImage.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  getimagePost: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostImage\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\opcens\\\\Opcens.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getOpcens } from \"../../actions/opcen\";\nimport OpcenItem from \"./OpcenItem\";\nimport { getOpcenProfile, getOpcenProfileById } from \"../../actions/opcenprofile\";\n\nconst Opcens = ({\n  getOpcens,\n  user,\n  opcen: {\n    opcen,\n    opcens,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getOpcens(user);\n  }, [getOpcens, user]);\n  return loading || opcens === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height: \"88vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \" 2fr 1fr\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"large text-primary\",\n          children: \" Operation Center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Create affiliate Opcen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"small-txt-blk\",\n          children: \"Command your team and control your resources.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            maxheight: \"68vh\",\n            justifyContent: \"space-around\",\n            flexWrap: \"wrap\",\n            overflowY: \"auto\"\n          },\n          children: opcens.map(opcen => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts\",\n            children: /*#__PURE__*/_jsxDEV(OpcenItem, {\n              opcen: opcen\n            }, opcen._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Opcens, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Opcens;\nOpcens.propTypes = {\n  getOpcens: PropTypes.func.isRequired,\n  getOpcenProfile: PropTypes.func.isRequired,\n  opcen: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  opcen: state.opcen,\n  user: state.auth.user._id\n});\n\nexport default connect(mapStateToProps, {\n  getOpcens,\n  getOpcenProfile,\n  getOpcenProfileById\n})(Opcens);\n\nvar _c;\n\n$RefreshReg$(_c, \"Opcens\");","map":{"version":3,"sources":["D:/1App/client/src/components/opcens/Opcens.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getOpcens","OpcenItem","getOpcenProfile","getOpcenProfileById","Opcens","user","opcen","opcens","loading","padding","background","borderRadius","height","display","gridTemplateColumns","alignItems","flexDirection","width","maxheight","justifyContent","flexWrap","overflowY","map","_id","propTypes","func","isRequired","object","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getOpcens } from \"../../actions/opcen\";\r\nimport OpcenItem from \"./OpcenItem\";\r\n\r\nimport {\r\n  getOpcenProfile,\r\n  getOpcenProfileById,\r\n} from \"../../actions/opcenprofile\";\r\n\r\nconst Opcens = ({ getOpcens, user, opcen: { opcen, opcens, loading } }) => {\r\n  useEffect(() => {\r\n    getOpcens(user);\r\n  }, [getOpcens, user]);\r\n  return loading || opcens === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          padding: \"10px\",\r\n          background: \"#fff\",\r\n          borderRadius: \"10px\",\r\n          height: \"88vh\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \" 2fr 1fr\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h1 className='large text-primary'> Operation Center</h1>\r\n          <button> Create affiliate Opcen</button>\r\n        </div>\r\n        <div>\r\n          <small className='small-txt-blk'>\r\n            Command your team and control your resources.\r\n          </small>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              width: \"100%\",\r\n              maxheight: \"68vh\",\r\n\r\n              justifyContent: \"space-around\",\r\n              flexWrap: \"wrap\",\r\n              overflowY: \"auto\",\r\n            }}\r\n          >\r\n            {opcens.map(opcen => (\r\n              <div className='posts'>\r\n                <OpcenItem key={opcen._id} opcen={opcen} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nOpcens.propTypes = {\r\n  getOpcens: PropTypes.func.isRequired,\r\n  getOpcenProfile: PropTypes.func.isRequired,\r\n  opcen: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  opcen: state.opcen,\r\n  user: state.auth.user._id,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOpcens,\r\n  getOpcenProfile,\r\n  getOpcenProfileById,\r\n})(Opcens);\r\n"]},"metadata":{},"sourceType":"module"}
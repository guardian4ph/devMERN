{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\"; //Connect the component to redux\n//See Export down end file\n\nimport { connect } from \"react-redux\"; //Bring actions in the action folders\n\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  //formdata is the state, setFormData is the function use to update the state\n  //Use state hooks\n  const [formData, setFormData] = useState({\n    name: \"\",\n    lname: \"\",\n    number: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  }); //destructure so you would do formData.name formData.number\n  //Object Syntax use {}\n\n  const {\n    name,\n    lname,\n    number,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = async (c) => setFormData({ ...formData,\n    [c.target.name]: c.target.value\n  });\n\n  const onSubmit = async c => {\n    c.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords dont match\", \"danger\");\n    } else {\n      //register is the action from reducers\n      register({\n        name,\n        lname,\n        number,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        position: \"fixed\",\n        top: \"25%\",\n        width: \"640px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\",\n          background: \"#fff\",\n          borderRadius: \"10px\",\n          margin: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"large text-primary\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" Create Your Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: c => onSubmit(c),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"First Name\",\n              name: \"name\" //value is set value on state for onChange\n              ,\n              value: name,\n              onChange: c => onChange(c),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Last Name\",\n              name: \"lname\" //value is set value on state for onChange\n              ,\n              value: lname,\n              onChange: c => onChange(c),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              placeholder: \"09XX XXX XXXX\",\n              name: \"number\",\n              value: number,\n              onChange: c => onChange(c),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text\",\n              children: \"This site uses your mobile number for authentication, sending alerts and other communication.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email Address\",\n              name: \"email\",\n              value: email,\n              onChange: c => onChange(c)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: password,\n              onChange: c => onChange(c),\n              minLength: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: password2,\n              onChange: c => onChange(c),\n              name: \"password2\",\n              minLength: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            value: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-1\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"n2iAJcdkIUM1RwnS+XN7PSeUQfY=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n}); //Connect get two props the\n// 1. state that  you want to map.. e.g get state from other actions\n// 2. object you want to use from actions and its props\n\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/1App/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","lname","number","email","password","password2","onChange","c","target","value","onSubmit","preventDefault","margin","position","top","width","padding","background","borderRadius","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBG,EAAAA;AAAtB,CAAD,KAA6C;AAAA;;AAC5D;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,MAAM,EAAE,EAH+B;AAIvCC,IAAAA,KAAK,EAAE,EAJgC;AAKvCC,IAAAA,QAAQ,EAAE,EAL6B;AAMvCC,IAAAA,SAAS,EAAE;AAN4B,GAAD,CAAxC,CAH4D,CAW5D;AACA;;AACA,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,MAAsDP,QAA5D;;AAEA,QAAMQ,QAAQ,GAAG,OAAMC,CAAN,KACfR,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACS,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BZ,MAAAA,QAAQ,CAAC,sBAAD,EAAyB,QAAzB,CAAR;AACD,KAFD,MAEO;AACL;AACAC,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA,KAAvB;AAA8BC,QAAAA;AAA9B,OAAD,CAAR;AACD;AACF,GARD;;AASA,MAAIP,eAAJ,EAAqB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLe,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,QAAQ,EAAE,OAFL;AAGLC,QAAAA,GAAG,EAAE,KAHA;AAILC,QAAAA,KAAK,EAAE;AAJF,OADT;AAAA,6BAQE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,YAAY,EAAE,MAHT;AAILN,UAAAA,MAAM,EAAE;AAJH,SADT;AAAA,gCAQE;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,QAAQ,EAAEL,CAAC,IAAIG,QAAQ,CAACH,CAAD,CAA9C;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,YAFd;AAGE,cAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,cAAA,KAAK,EAAEP,IALT;AAME,cAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAOE,cAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,WAFd;AAGE,cAAA,IAAI,EAAC,OAHP,CAIE;AAJF;AAKE,cAAA,KAAK,EAAEN,KALT;AAME,cAAA,QAAQ,EAAEM,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAOE,cAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,WAAW,EAAC,eAFd;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,KAAK,EAAEL,MAJT;AAKE,cAAA,QAAQ,EAAEK,CAAC,IAAID,QAAQ,CAACC,CAAD,CALzB;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAqCE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,WAAW,EAAC,eAFd;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,KAAK,EAAEJ,KAJT;AAKE,cAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD;AALzB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAO,cAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF,eA+CE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,KAAK,EAAEH,QAJT;AAKE,cAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CALzB;AAME,cAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/CF,eAyDE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,kBAFd;AAGE,cAAA,KAAK,EAAEF,SAHT;AAIE,cAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJzB;AAKE,cAAA,IAAI,EAAC,WALP;AAME,cAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzDF,eAmEE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC,iBAA/B;AAAiD,YAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAiFE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,+DAC2B,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkGD,CAhID;;GAAMX,Q;;KAAAA,Q;AAkINA,QAAQ,CAACuB,SAAT,GAAqB;AACnB1B,EAAAA,QAAQ,EAAEE,SAAS,CAACyB,IAAV,CAAeC,UADN;AAEnB3B,EAAAA,QAAQ,EAAEC,SAAS,CAACyB,IAAV,CAAeC,UAFN;AAGnBxB,EAAAA,eAAe,EAAEF,SAAS,CAAC2B;AAHR,CAArB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChC3B,EAAAA,eAAe,EAAE2B,KAAK,CAACC,IAAN,CAAW5B;AADI,CAAL,CAA7B,C,CAIA;AACA;AACA;;;AACA,eAAeL,OAAO,CAAC+B,eAAD,EAAkB;AAAE9B,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAiDE,QAAjD,CAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n//Connect the component to redux\r\n//See Export down end file\r\nimport { connect } from \"react-redux\";\r\n//Bring actions in the action folders\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  //formdata is the state, setFormData is the function use to update the state\r\n  //Use state hooks\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    lname: \"\",\r\n    number: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  //destructure so you would do formData.name formData.number\r\n  //Object Syntax use {}\r\n  const { name, lname, number, email, password, password2 } = formData;\r\n\r\n  const onChange = async c =>\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n\r\n  const onSubmit = async c => {\r\n    c.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords dont match\", \"danger\");\r\n    } else {\r\n      //register is the action from reducers\r\n      register({ name, lname, number, email, password });\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          position: \"fixed\",\r\n          top: \"25%\",\r\n          width: \"640px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            background: \"#fff\",\r\n            borderRadius: \"10px\",\r\n            margin: \"1rem\",\r\n          }}\r\n        >\r\n          <h1 className='large text-primary'>Sign Up</h1>\r\n          <p className='lead'>\r\n            <i className='fas fa-user'></i> Create Your Account\r\n          </p>\r\n          <form className='form' onSubmit={c => onSubmit(c)}>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                placeholder='First Name'\r\n                name='name'\r\n                //value is set value on state for onChange\r\n                value={name}\r\n                onChange={c => onChange(c)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                placeholder='Last Name'\r\n                name='lname'\r\n                //value is set value on state for onChange\r\n                value={lname}\r\n                onChange={c => onChange(c)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='tel'\r\n                placeholder='09XX XXX XXXX'\r\n                name='number'\r\n                value={number}\r\n                onChange={c => onChange(c)}\r\n                required\r\n              />\r\n              <small className='form-text'>\r\n                This site uses your mobile number for authentication, sending\r\n                alerts and other communication.\r\n              </small>\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='email'\r\n                placeholder='Email Address'\r\n                name='email'\r\n                value={email}\r\n                onChange={c => onChange(c)}\r\n              />\r\n              <small className='form-text'></small>\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                placeholder='Password'\r\n                name='password'\r\n                value={password}\r\n                onChange={c => onChange(c)}\r\n                minLength='8'\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                value={password2}\r\n                onChange={c => onChange(c)}\r\n                name='password2'\r\n                minLength='8'\r\n              />\r\n            </div>\r\n            <input type='submit' className='btn btn-primary' value='Register' />\r\n          </form>\r\n          <p className='my-1'>\r\n            Already have an account? <Link to='/login'>Sign In</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n//Connect get two props the\r\n// 1. state that  you want to map.. e.g get state from other actions\r\n// 2. object you want to use from actions and its props\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}
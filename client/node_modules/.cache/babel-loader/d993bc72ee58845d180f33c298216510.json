{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, CLEAR_PROFILE, RESET_PASSWORD, USER_OPCEN_ADMIN } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\"; //Load User check if there is a token for user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  dispatch(loadRigths());\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const loadRigths = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/auth/accessrigths\");\n    dispatch({\n      type: USER_OPCEN_ADMIN,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //Register User\n\nexport const register = ({\n  name,\n  lname,\n  number,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    lname,\n    number,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser()); // dispatch(loadRigths());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n}; //  Check if User Exist via email\n\nexport const forgot_password = email => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n\n  try {\n    const res = await axios.post(\"/api/auth/forgot\", body, config);\n    dispatch({\n      type: RESET_PASSWORD,\n      payload: res.data\n    }); // dispatch(send_otp());\n    // dispatch(\n    //   setAlert(\"One time pin (OTP) send to your mobile number.\", \"success\")\n    // );\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n  }\n}; // Add Access Rigths\n\nexport const accessrigths = rigths => async dispatch => {\n  console.log(\"access right hit\");\n\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"api/users/accessrigths\", rigths, config);\n    dispatch({\n      type: USER_OPCEN_ADMIN,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Admin rights added\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n  }\n};","map":{"version":3,"sources":["D:/1App/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","CLEAR_PROFILE","RESET_PASSWORD","USER_OPCEN_ADMIN","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","loadRigths","res","get","type","payload","data","err","register","name","lname","number","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout","forgot_password","accessrigths","rigths","console","log","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,MAPF,EAQEC,aARF,EASEC,cATF,EAUEC,gBAVF,QAWO,SAXP;AAYA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACDF,EAAAA,QAAQ,CAACG,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,WAAV,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEjB,WADC;AAEPkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACD;AACF,CAfM;AAiBP,OAAO,MAAMa,UAAU,GAAG,MAAM,MAAMH,QAAN,IAAkB;AAChD,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,wBAAV,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACD;AACF,CAXM,C,CAaP;;AAEA,OAAO,MAAMoB,QAAQ,GACnB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAAD,KACA,MAAMf,QAAN,IAAkB;AAChB,QAAMgB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAET,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAf,CAAb;;AACA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMlB,KAAK,CAACmC,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEnB,gBADC;AAEPoB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAR,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR,CANE,CAQF;AACD,GATD,CASE,OAAOU,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAACH,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAED1B,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD;AACF,CA7BI,C,CA+BP;;AAEA,OAAO,MAAMuC,KAAK,GAAG,CAACb,KAAD,EAAQC,QAAR,KAAqB,MAAMf,QAAN,IAAkB;AAC1D,QAAMgB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AACA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMlB,KAAK,CAACmC,IAAN,CAAW,WAAX,EAAwBH,IAAxB,EAA8BF,MAA9B,CAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOU,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAACH,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAED1B,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGD;AACF,CA1BM,C,CA4BP;;AAEA,OAAO,MAAMqC,MAAM,GAAG,MAAM5B,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACAO,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACD,CAHM,C,CAKP;;AAEA,OAAO,MAAMmC,eAAe,GAAGf,KAAK,IAAI,MAAMd,QAAN,IAAkB;AACxD,QAAMgB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA;AAAF,GAAf,CAAb;;AACA,MAAI;AACF,UAAMV,GAAG,GAAG,MAAMlB,KAAK,CAACmC,IAAN,CAAW,kBAAX,EAA+BH,IAA/B,EAAqCF,MAArC,CAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,cADC;AAEPY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR,CAFE,CAOF;AACA;AACA;AACA;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAACH,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;AACF;AACF,CAzBM,C,CA2BP;;AAEA,OAAO,MAAMI,YAAY,GAAGC,MAAM,IAAI,MAAM/B,QAAN,IAAkB;AACtDgC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAI;AACF,UAAMjB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMb,GAAG,GAAG,MAAMlB,KAAK,CAACgD,GAAN,CAAU,wBAAV,EAAoCH,MAApC,EAA4Cf,MAA5C,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAACH,QAAQ,CAAC,oBAAD,EAAuB,SAAvB,CAAT,CAAR;AACD,GAdD,CAcE,OAAOY,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAACH,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;AACF;AACF,CAtBM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n  RESET_PASSWORD,\r\n  USER_OPCEN_ADMIN,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//Load User check if there is a token for user\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  dispatch(loadRigths());\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\nexport const loadRigths = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/auth/accessrigths\");\r\n\r\n    dispatch({\r\n      type: USER_OPCEN_ADMIN,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n//Register User\r\n\r\nexport const register =\r\n  ({ name, lname, number, email, password }) =>\r\n  async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, lname, number, email, password });\r\n    try {\r\n      const res = await axios.post(\"/api/users\", body, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(loadUser());\r\n\r\n      // dispatch(loadRigths());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n//Login User\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n  dispatch({ type: CLEAR_PROFILE });\r\n};\r\n\r\n//  Check if User Exist via email\r\n\r\nexport const forgot_password = email => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email });\r\n  try {\r\n    const res = await axios.post(\"/api/auth/forgot\", body, config);\r\n    dispatch({\r\n      type: RESET_PASSWORD,\r\n      payload: res.data,\r\n    });\r\n\r\n    // dispatch(send_otp());\r\n    // dispatch(\r\n    //   setAlert(\"One time pin (OTP) send to your mobile number.\", \"success\")\r\n    // );\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n  }\r\n};\r\n\r\n// Add Access Rigths\r\n\r\nexport const accessrigths = rigths => async dispatch => {\r\n  console.log(\"access right hit\");\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\"api/users/accessrigths\", rigths, config);\r\n\r\n    dispatch({\r\n      type: USER_OPCEN_ADMIN,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Admin rights added\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
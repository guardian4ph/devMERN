{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\PostImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getimagePost } from \"../../actions/post\";\n\nconst ImagePost = ({\n  post: {\n    post,\n    _id,\n    text,\n    name,\n    articleImage,\n    avatar,\n    profilepic,\n    user,\n    likes,\n    comments,\n    date\n  },\n  auth,\n  getimagePost,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getimagePost(match.params.id, match.params.articleImage);\n  }, [getimagePost, match.params.id, match.params.articleImage]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/App1/client/public/img/${getimagePost.articleImage}`,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large\",\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImagePost;\nImagePost.propTypes = {\n  getimagePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getimagePost\n})(ImagePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePost\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/PostImage.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getimagePost","ImagePost","post","_id","text","name","articleImage","avatar","profilepic","user","likes","comments","date","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,IAAI,EAAE;AACJA,IAAAA,IADI;AAEJC,IAAAA,GAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,IARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,QAVI;AAWJC,IAAAA;AAXI,GADW;AAcjBC,EAAAA,IAdiB;AAejBb,EAAAA,YAfiB;AAgBjBc,EAAAA;AAhBiB,CAAD,KAiBZ;AAAA;;AACJlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACc,KAAK,CAACC,MAAN,CAAaC,EAAd,EAAkBF,KAAK,CAACC,MAAN,CAAaT,YAA/B,CAAZ;AACD,GAFQ,EAEN,CAACN,YAAD,EAAec,KAAK,CAACC,MAAN,CAAaC,EAA5B,EAAgCF,KAAK,CAACC,MAAN,CAAaT,YAA7C,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAG,2BAA0BN,YAAY,CAACM,YAAa,EAD5D;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAML,S;;KAAAA,S;AAmCNA,SAAS,CAACgB,SAAV,GAAsB;AACpBjB,EAAAA,YAAY,EAAEH,SAAS,CAACqB,IAAV,CAAeC,UADT;AAEpBjB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,MAAV,CAAiBD;AAFH,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCpB,EAAAA,IAAI,EAAEoB,KAAK,CAACpB;AADoB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getimagePost } from \"../../actions/post\";\r\n\r\nconst ImagePost = ({\r\n  post: {\r\n    post,\r\n    _id,\r\n    text,\r\n    name,\r\n    articleImage,\r\n    avatar,\r\n    profilepic,\r\n    user,\r\n    likes,\r\n    comments,\r\n    date,\r\n  },\r\n  auth,\r\n  getimagePost,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getimagePost(match.params.id, match.params.articleImage);\r\n  }, [getimagePost, match.params.id, match.params.articleImage]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='posts'>\r\n        <img\r\n          src={`/App1/client/public/img/${getimagePost.articleImage}`}\r\n          alt='...'\r\n        />\r\n      </div>\r\n      <h1 className='large'>Test</h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImagePost.propTypes = {\r\n  getimagePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getimagePost })(ImagePost);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\auth\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\"; //Connect the component to redux\n//See Export down end file\n\nimport { connect } from \"react-redux\"; //Bring actions in the action folders\n\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst ChangePassword = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  //formdata is the state, setFormData is the function use to update the state\n  //Use state hooks\n  const [formData, setFormData] = useState({\n    name: \"\",\n    lname: \"\",\n    number: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  }); //destructure so you would do formData.name formData.number\n  //Object Syntax use {}\n\n  const {\n    name,\n    lname,\n    number,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = async (c) => setFormData({ ...formData,\n    [c.target.name]: c.target.value\n  });\n\n  const onSubmit = async c => {\n    c.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords dont match\", \"danger\");\n    } else {\n      //register is the action from reducers\n      changepassword({\n        name,\n        lname,\n        number,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\",\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        margin: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" Please enter a new password should be 8 characters in length.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: c => onSubmit(c),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            name: \"name\" //value is set value on state for onChange\n            ,\n            value: name,\n            onChange: c => onChange(c),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Last Name\",\n            name: \"lname\" //value is set value on state for onChange\n            ,\n            value: lname,\n            onChange: c => onChange(c),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            placeholder: \"09XX XXX XXXX\",\n            name: \"number\",\n            value: number,\n            onChange: c => onChange(c),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\",\n            children: \"This site uses your mobile number for authentication, sending alerts and other communication.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            value: email,\n            onChange: c => onChange(c)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: password,\n            onChange: c => onChange(c),\n            minLength: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: password2,\n            onChange: c => onChange(c),\n            name: \"password2\",\n            minLength: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePassword, \"n2iAJcdkIUM1RwnS+XN7PSeUQfY=\");\n\n_c = ChangePassword;\nChangePassword.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  changepassword: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n}); //Connect get two props the\n// 1. state that  you want to map.. e.g get state from other actions\n// 2. object you want to use from actions and its props\n\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  changepassword\n})(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["D:/1App/client/src/components/auth/ChangePassword.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","PropTypes","ChangePassword","isAuthenticated","formData","setFormData","name","lname","number","email","password","password2","onChange","c","target","value","onSubmit","preventDefault","changepassword","padding","background","borderRadius","margin","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n//Connect the component to redux\r\n//See Export down end file\r\nimport { connect } from \"react-redux\";\r\n//Bring actions in the action folders\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ChangePassword = ({ setAlert, register, isAuthenticated }) => {\r\n  //formdata is the state, setFormData is the function use to update the state\r\n  //Use state hooks\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    lname: \"\",\r\n    number: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  //destructure so you would do formData.name formData.number\r\n  //Object Syntax use {}\r\n  const { name, lname, number, email, password, password2 } = formData;\r\n\r\n  const onChange = async c =>\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n\r\n  const onSubmit = async c => {\r\n    c.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords dont match\", \"danger\");\r\n    } else {\r\n      //register is the action from reducers\r\n      changepassword({ name, lname, number, email, password });\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n          background: \"#fff\",\r\n          borderRadius: \"10px\",\r\n          margin: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 className='large text-primary'>Change Password</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Please enter a new password should be\r\n          8 characters in length.\r\n        </p>\r\n        <form className='form' onSubmit={c => onSubmit(c)}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='First Name'\r\n              name='name'\r\n              //value is set value on state for onChange\r\n              value={name}\r\n              onChange={c => onChange(c)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Last Name'\r\n              name='lname'\r\n              //value is set value on state for onChange\r\n              value={lname}\r\n              onChange={c => onChange(c)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='tel'\r\n              placeholder='09XX XXX XXXX'\r\n              name='number'\r\n              value={number}\r\n              onChange={c => onChange(c)}\r\n              required\r\n            />\r\n            <small className='form-text'>\r\n              This site uses your mobile number for authentication, sending\r\n              alerts and other communication.\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={c => onChange(c)}\r\n            />\r\n            <small className='form-text'></small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={c => onChange(c)}\r\n              minLength='8'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={password2}\r\n              onChange={c => onChange(c)}\r\n              name='password2'\r\n              minLength='8'\r\n            />\r\n          </div>\r\n          <input\r\n            type='submit'\r\n            className='btn btn-primary'\r\n            value='Change Password'\r\n          />\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChangePassword.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  changepassword: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n//Connect get two props the\r\n// 1. state that  you want to map.. e.g get state from other actions\r\n// 2. object you want to use from actions and its props\r\nexport default connect(mapStateToProps, { setAlert, changepassword })(\r\n  ChangePassword\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
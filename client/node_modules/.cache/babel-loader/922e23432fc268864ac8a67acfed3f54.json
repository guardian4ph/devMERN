{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    articleImage,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img\",\n        src: avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"400px\"\n      },\n      src: window.location.origin + `/img/${articleImage}`,\n      alt: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\" \", \"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"LLLL\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => removeLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: c => deletePost(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this); //console.log(PostItem);\n// set show action to true so buttons would not show in single post\n\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","articleImage","avatar","user","likes","comments","date","showActions","width","window","location","origin","c","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, articleImage, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <img\r\n        style={{ width: \"400px\" }}\r\n        src={window.location.origin + `/img/${articleImage}`}\r\n        alt='...'\r\n      />\r\n\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        {\" \"}\r\n        Posted on <Moment format='LLLL'>{date}</Moment>\r\n      </p>\r\n      {showActions && (\r\n        <Fragment>\r\n          {/* Button for like */}\r\n          <button\r\n            onClick={c => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up'></i>{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n\r\n          {/* Button for Unlike */}\r\n          <button\r\n            onClick={c => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={c => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n//console.log(PostItem);\r\n// set show action to true so buttons would not show in single post\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
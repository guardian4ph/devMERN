{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident\\\\Incidents.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getIncidents } from \"../../actions/incident\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\nimport Clock from \"react-clock\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Incidents = ({\n  getIncidents,\n  incident: {\n    loading,\n    incidents\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getIncidents();\n    getOpcenProfileById();\n  }, []); //   Clock declarations\n\n  const [value, setValue] = useState(new Date());\n  useEffect(() => {\n    const interval = setInterval(() => setValue(new Date()), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return;\n  loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CURRENT INCDENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Current time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Clock, {\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Incidents, \"Jv5UHH+9FsyLdDzJzsBvKjjsU+o=\");\n\n_c = Incidents;\nIncidents.propTypes = {\n  getIncidents: PropTypes.func.isRequired,\n  incident: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  incident: state.incident\n});\n\nconst mapDispatchToProps = {\n  getIncidents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\n\nvar _c;\n\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident/Incidents.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","getIncidents","getOpcenProfileById","Clock","Spinner","Incidents","incident","loading","incidents","value","setValue","Date","interval","setInterval","clearInterval","propTypes","func","isRequired","object","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,YAAF;AAAgBK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAA1B,CAAD,KAAwD;AAAA;;AACxEX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACZC,IAAAA,mBAAmB;AACpB,GAHQ,EAGN,EAHM,CAAT,CADwE,CAMxE;;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAAlC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAMH,QAAQ,CAAC,IAAIC,IAAJ,EAAD,CAAf,EAA6B,IAA7B,CAA5B;AAEA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA;AAEAL,EAAAA,OAAO,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAaD,CAjCD;;GAAMJ,S;;KAAAA,S;AAmCNA,SAAS,CAACU,SAAV,GAAsB;AACpBd,EAAAA,YAAY,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADT;AAEpBX,EAAAA,QAAQ,EAAEP,SAAS,CAACmB,MAAV,CAAiBD;AAFP,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,QAAQ,EAAEc,KAAK,CAACd;AADgB,CAAL,CAA7B;;AAIA,MAAMe,kBAAkB,GAAG;AAAEpB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIncidents } from \"../../actions/incident\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\nimport Clock from \"react-clock\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Incidents = ({ getIncidents, incident: { loading, incidents } }) => {\r\n  useEffect(() => {\r\n    getIncidents();\r\n    getOpcenProfileById();\r\n  }, []);\r\n\r\n  //   Clock declarations\r\n\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setValue(new Date()), 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return;\r\n\r\n  loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div>\r\n        <h1>CURRENT INCDENTS</h1>\r\n        <div>\r\n          <p>Current time:</p>\r\n          <Clock value={value} />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nIncidents.propTypes = {\r\n  getIncidents: PropTypes.func.isRequired,\r\n  incident: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incident: state.incident,\r\n});\r\n\r\nconst mapDispatchToProps = { getIncidents };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\CommentItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nconst MAX_LENGTH = 150;\n\nconst CommentItem = ({\n  profile: {\n    profiles,\n    loading\n  },\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    lname,\n    profilepic,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => {\n  _s();\n\n  const [shortComment, toggleShortComment] = useState(true);\n  const [fullComment, toggleFullComment] = useState(false);\n\n  const timeDifference = () => {\n    // var previousdate = new Date(date);\n    // console.log(\"date\", previousdate);\n    // var previousmnth = (\"0\" + (previousdate.getMonth() + 1)).slice(-2);\n    // console.log(\"previousMonth\", previousmnth);\n    // var previousday = (\"0\" + previousdate.getDate()).slice(-2);\n    // var previoushours = (\"0\" + previousdate.getHours()).slice(-2);\n    // var previousminutes = (\"0\" + previousdate.getMinutes()).slice(-2);\n    // var previous = [\n    //   previousdate.getFullYear(),\n    //   previousmnth,\n    //   previousday,\n    //   previoushours,\n    //   previousminutes,\n    // ].join(\"-\");\n    // console.log(\"previous\", previous);\n    // var current = new Date();\n    // console.log(\"Current Date\", current);\n    // var minutes = 60 * 1000;\n    // var hours = minutes * 60;\n    // var days = hours * 24;\n    // var months = days * 30;\n    // var years = days * 365;\n    var elapsed = current - date;\n\n    if (elapsed < minutes) {\n      return Math.round(elapsed / 1000) + \" seconds ago\";\n    } else if (elapsed < hours) {\n      return Math.round(elapsed / minutes) + \" minutes ago\";\n    } else if (elapsed < days) {\n      return Math.round(elapsed / hours) + \" hours ago\";\n    } else if (elapsed < months) {\n      return \"approximately \" + Math.round(elapsed / days) + \" days ago\";\n    } else if (elapsed < years) {\n      return \"approximately \" + Math.round(elapsed / months) + \" months ago\";\n    } else {\n      return \"approximately \" + Math.round(elapsed / years) + \" years ago\";\n    }\n  };\n\n  const onButtonClick = useCallback(e => {\n    toggleShortComment(!shortComment);\n    toggleFullComment(!fullComment);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user}`,\n          children: profiles.length > 0 ? profiles.map(profile => {\n            if (profile.user._id === user) {\n              // <PostHeader key={profile._id} profile={profile} />;\n              // console.log(\" Profile\", profile._id);\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    height: \"60px\",\n                    margin: \"0px 1px\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-around\",\n                    borderBottom: \"1px solid #ddd\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      paddingLeft: \"10px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"post-profile\",\n                      src: `/img/${profile.profilepic}`,\n                      alt: \"...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 29\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"65%\",\n                      marginLeft: \"20px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        flexDirection: \"row\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"p-11\",\n                        children: name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 31\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"p-11\",\n                        children: lname\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 31\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"post-date  f-1 \",\n                      children: [\" \", \"Posted \", /*#__PURE__*/_jsxDEV(Moment, {\n                        format: \"LLLL\",\n                        children: date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 38\n                      }, this), timeDifference()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"20%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"5%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-ellipsis-h\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this);\n            }\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post-profile\",\n              src: `/img/Spotter.png`,\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text.length > MAX_LENGTH ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" commentFont m f-2\",\n            children: [shortComment && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textIndent: \"20px\"\n              },\n              children: [`${text.substring(0, MAX_LENGTH)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-comment\",\n                onClick: onButtonClick,\n                type: \"button\",\n                children: \"see more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this), fullComment && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commentFont m f-2\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentItem, \"TrcS0Xge+NxvjdMHK+7dBPvjFXI=\");\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/CommentItem.js"],"names":["React","Fragment","useState","useCallback","Link","PropTypes","connect","Moment","deleteComment","Spinner","MAX_LENGTH","CommentItem","profile","profiles","loading","postId","comment","_id","text","name","lname","profilepic","user","date","auth","shortComment","toggleShortComment","fullComment","toggleFullComment","timeDifference","elapsed","current","minutes","Math","round","hours","days","months","years","onButtonClick","e","width","length","map","display","flexDirection","height","margin","alignItems","justifyContent","borderBottom","paddingLeft","marginLeft","textIndent","substring","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst MAX_LENGTH = 150;\r\n\r\nconst CommentItem = ({\r\n  profile: { profiles, loading },\r\n  postId,\r\n  comment: { _id, text, name, lname, profilepic, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => {\r\n  const [shortComment, toggleShortComment] = useState(true);\r\n  const [fullComment, toggleFullComment] = useState(false);\r\n\r\n  const timeDifference = () => {\r\n    // var previousdate = new Date(date);\r\n    // console.log(\"date\", previousdate);\r\n    // var previousmnth = (\"0\" + (previousdate.getMonth() + 1)).slice(-2);\r\n    // console.log(\"previousMonth\", previousmnth);\r\n    // var previousday = (\"0\" + previousdate.getDate()).slice(-2);\r\n    // var previoushours = (\"0\" + previousdate.getHours()).slice(-2);\r\n    // var previousminutes = (\"0\" + previousdate.getMinutes()).slice(-2);\r\n    // var previous = [\r\n    //   previousdate.getFullYear(),\r\n    //   previousmnth,\r\n    //   previousday,\r\n    //   previoushours,\r\n    //   previousminutes,\r\n    // ].join(\"-\");\r\n\r\n    // console.log(\"previous\", previous);\r\n    // var current = new Date();\r\n\r\n    // console.log(\"Current Date\", current);\r\n    // var minutes = 60 * 1000;\r\n    // var hours = minutes * 60;\r\n    // var days = hours * 24;\r\n    // var months = days * 30;\r\n    // var years = days * 365;\r\n\r\n    var elapsed = current - date;\r\n\r\n    if (elapsed < minutes) {\r\n      return Math.round(elapsed / 1000) + \" seconds ago\";\r\n    } else if (elapsed < hours) {\r\n      return Math.round(elapsed / minutes) + \" minutes ago\";\r\n    } else if (elapsed < days) {\r\n      return Math.round(elapsed / hours) + \" hours ago\";\r\n    } else if (elapsed < months) {\r\n      return \"approximately \" + Math.round(elapsed / days) + \" days ago\";\r\n    } else if (elapsed < years) {\r\n      return \"approximately \" + Math.round(elapsed / months) + \" months ago\";\r\n    } else {\r\n      return \"approximately \" + Math.round(elapsed / years) + \" years ago\";\r\n    }\r\n  };\r\n\r\n  const onButtonClick = useCallback(e => {\r\n    toggleShortComment(!shortComment);\r\n    toggleFullComment(!fullComment);\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='comment bg-white p-1 my-1'>\r\n          <div style={{ width: \"100%\" }}>\r\n            <Link to={`/profile/${user}`}>\r\n              {/* map all profiles here */}\r\n              {profiles.length > 0 ? (\r\n                profiles.map(profile => {\r\n                  if (profile.user._id === user) {\r\n                    // <PostHeader key={profile._id} profile={profile} />;\r\n                    // console.log(\" Profile\", profile._id);\r\n                    return (\r\n                      <Fragment>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            height: \"60px\",\r\n                            margin: \"0px 1px\",\r\n                            alignItems: \"center\",\r\n\r\n                            justifyContent: \"space-around\",\r\n                            borderBottom: \"1px solid #ddd\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              paddingLeft: \"10px\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              className='post-profile'\r\n                              src={`/img/${profile.profilepic}`}\r\n                              alt='...'\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              width: \"65%\",\r\n                              marginLeft: \"20px\",\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                              }}\r\n                            >\r\n                              <h4 className='p-11'>{name}</h4>{\" \"}\r\n                              <h4 className='p-11'>{lname}</h4>{\" \"}\r\n                            </div>\r\n\r\n                            <p className='post-date  f-1 '>\r\n                              {\" \"}\r\n                              Posted <Moment format='LLLL'>{date}</Moment>\r\n                              {timeDifference()}\r\n                            </p>\r\n                          </div>\r\n                          <div style={{ width: \"20%\" }}></div>\r\n                          <div style={{ width: \"5%\" }}>\r\n                            <i\r\n                              className='fa fa-ellipsis-h'\r\n                              aria-hidden='true'\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </Fragment>\r\n                    );\r\n                  }\r\n                })\r\n              ) : (\r\n                <div>\r\n                  <img\r\n                    className='post-profile'\r\n                    src={`/img/Spotter.png`}\r\n                    alt='...'\r\n                  />\r\n                </div>\r\n              )}\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              {text.length > MAX_LENGTH ? (\r\n                <div className=' commentFont m f-2'>\r\n                  {shortComment && (\r\n                    <div style={{ textIndent: \"20px\" }}>\r\n                      {`${text.substring(0, MAX_LENGTH)}...`}\r\n                      <button\r\n                        className='btn-comment'\r\n                        onClick={onButtonClick}\r\n                        type='button'\r\n                      >\r\n                        see more\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  {fullComment && (\r\n                    <div>\r\n                      <p>{text}</p>\r\n                      {/* <button\r\n                        className='btn-comment'\r\n                        onClick={onButtonClick}\r\n                        type='button'\r\n                      >\r\n                        see less\r\n                      </button> */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <p className='commentFont m f-2'>{text}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n"]},"metadata":{},"sourceType":"module"}
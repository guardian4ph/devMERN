{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\nimport { setAlert } from \"../../actions/alert\";\n\nconst Login = ({\n  login,\n  isAuthenticated,\n  isOpcenAdmin,\n  createOpcen,\n  setAlert\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = async (c) => setFormData({ ...formData,\n    [c.target.name]: c.target.value\n  });\n\n  const onSubmit = async c => {\n    c.preventDefault();\n    login(email, password);\n  }; //Redirect if Logged in\n\n\n  console.log(isOpcenAdmin);\n\n  if (isAuthenticated && isOpcenAdmin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/operation-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isAuthenticated && createOpcen) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/create-operation-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } // if (isAuthenticated && !isOpcenAdmin) {\n  //   return <Redirect to='/posts' />;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        position: \"fixed\",\n        top: \"25%\",\n        width: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\",\n          background: \"#fff\",\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"block\",\n            borderRadius: \"10px\",\n            padding: \"20px\"\n          },\n          children: [createOpcen ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-danger \",\n            children: [\"Log-in or create an account first\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"large text-primary\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), \" Sign into your Account\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: c => onSubmit(c),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email Address\",\n                name: \"email\",\n                value: email,\n                onChange: c => onChange(c),\n                autoComplete: \"username email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                value: password,\n                onChange: c => onChange(c) // autocomplete='off'\n                ,\n                autoComplete: \"current-password\",\n                minLength: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              value: \"Log-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"my-1\",\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"my-1\",\n            children: [\"Forgot passsword? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgot_pass\",\n              children: \"Forgot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qI+hHd5nmRxDlaVKSzpPaQgQpt4=\");\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isOpcenAdmin: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  createOpcen: PropTypes.bool,\n  setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isOpcenAdmin: state.auth.isOpcenAdmin,\n  createOpcen: state.opcen.createOpcen,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  setAlert\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/1App/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","Link","Redirect","connect","PropTypes","login","setAlert","Login","isAuthenticated","isOpcenAdmin","createOpcen","formData","setFormData","email","password","onChange","c","target","name","value","onSubmit","preventDefault","console","log","margin","position","top","width","padding","background","borderRadius","display","propTypes","func","isRequired","bool","auth","object","mapStateToProps","state","opcen"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nconst Login = ({\r\n  login,\r\n  isAuthenticated,\r\n  isOpcenAdmin,\r\n  createOpcen,\r\n  setAlert,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = async c =>\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n\r\n  const onSubmit = async c => {\r\n    c.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  //Redirect if Logged in\r\n  console.log(isOpcenAdmin);\r\n  if (isAuthenticated && isOpcenAdmin) {\r\n    return <Redirect to='/operation-center' />;\r\n  } else {\r\n    return <Redirect to='/posts' />;\r\n  }\r\n  if (isAuthenticated && createOpcen) {\r\n    return <Redirect to='/create-operation-center' />;\r\n  }\r\n\r\n  // if (isAuthenticated && !isOpcenAdmin) {\r\n  //   return <Redirect to='/posts' />;\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          position: \"fixed\",\r\n          top: \"25%\",\r\n          width: \"100vh\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            background: \"#fff\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"block\",\r\n              borderRadius: \"10px\",\r\n\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            {createOpcen ? (\r\n              <p className='alert alert-danger '>\r\n                Log-in or create an account first{\" \"}\r\n              </p>\r\n            ) : null}\r\n\r\n            <h1 className='large text-primary'>Sign In</h1>\r\n            <p className='lead'>\r\n              <i className='fas fa-user'></i> Sign into your Account\r\n            </p>\r\n            <form className='form' onSubmit={c => onSubmit(c)}>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='email'\r\n                  placeholder='Email Address'\r\n                  name='email'\r\n                  value={email}\r\n                  onChange={c => onChange(c)}\r\n                  autoComplete='username email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={c => onChange(c)}\r\n                  // autocomplete='off'\r\n                  autoComplete='current-password'\r\n                  minLength='8'\r\n                />\r\n              </div>\r\n\r\n              <input type='submit' className='btn btn-primary' value='Log-in' />\r\n            </form>\r\n            <p className='my-1'>\r\n              Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n            <p className='my-1'>\r\n              Forgot passsword? <Link to='/forgot_pass'>Forgot</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isOpcenAdmin: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n  createOpcen: PropTypes.bool,\r\n  setAlert: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isOpcenAdmin: state.auth.isOpcenAdmin,\r\n  createOpcen: state.opcen.createOpcen,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, setAlert })(Login);\r\n"]},"metadata":{},"sourceType":"module"}
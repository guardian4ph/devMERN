{"ast":null,"code":"import AxiosDigest from \"axios-digest\";\nimport { SEND_OTP, SEND_OTP_FAIL } from \"./types\";\nexport const sendOtp = ({\n  number,\n  msg\n}) => async dispatch => {\n  const body = JSON.stringify({\n    number,\n    msg\n  });\n  const axios_digest = new AxiosDigest(process.env.USER, process.env.PASS);\n\n  try {\n    const res = await axios_digest.post(process.env.SMS_ENDPOINT + \"/api/send_sms\", {\n      text: msg,\n      param: [{\n        number: number\n      }]\n    });\n    dispatch({\n      type: SEND_OTP,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: SEND_OTP_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/1App/client/src/actions/sms.js"],"names":["AxiosDigest","SEND_OTP","SEND_OTP_FAIL","sendOtp","number","msg","dispatch","body","JSON","stringify","axios_digest","process","env","USER","PASS","res","post","SMS_ENDPOINT","text","param","type","payload","data","err","errors","response","forEach","error","setAlert"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,SAAxC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAqB,MAAMC,QAAN,IAAkB;AAC5D,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEL,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAf,CAAb;AACA,QAAMK,YAAY,GAAG,IAAIV,WAAJ,CAAgBW,OAAO,CAACC,GAAR,CAAYC,IAA5B,EAAkCF,OAAO,CAACC,GAAR,CAAYE,IAA9C,CAArB;;AAEA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,YAAY,CAACM,IAAb,CAChBL,OAAO,CAACC,GAAR,CAAYK,YAAZ,GAA2B,eADX,EAEhB;AAAEC,MAAAA,IAAI,EAAEb,GAAR;AAAac,MAAAA,KAAK,EAAE,CAAC;AAAEf,QAAAA,MAAM,EAAEA;AAAV,OAAD;AAApB,KAFgB,CAAlB;AAIAE,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEnB,QADC;AAEPoB,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACsB,QAAQ,CAACD,KAAK,CAACtB,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AACDC,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD;AACF,CAtBM","sourcesContent":["import AxiosDigest from \"axios-digest\";\r\nimport { SEND_OTP, SEND_OTP_FAIL } from \"./types\";\r\n\r\nexport const sendOtp = ({ number, msg }) => async dispatch => {\r\n  const body = JSON.stringify({ number, msg });\r\n  const axios_digest = new AxiosDigest(process.env.USER, process.env.PASS);\r\n\r\n  try {\r\n    const res = await axios_digest.post(\r\n      process.env.SMS_ENDPOINT + \"/api/send_sms\",\r\n      { text: msg, param: [{ number: number }] }\r\n    );\r\n    dispatch({\r\n      type: SEND_OTP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: SEND_OTP_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
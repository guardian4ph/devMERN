{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = []; // eslint-disable-next-line\n\nexport default function (state = initialState, action) {\n  //type of action.. payload is the data\n  //deconstruct action\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      //...state copies the state pass in props (state = initialState, action)\n      // return [...state, payload] state and payload so it can inform redux of the state\n      // payload is the content pass such from the reducer\n      // EXAMPLE dispatch({\n      //    type: SET_ALERT,\n      //    payload: { msg, alertType, id },\n      //  });\n      return [...state];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/1App/client/src/reducers/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","initialState","state","action","type","payload","filter","alert","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CACA;;AACA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgCE,MAAhC,EAAwC;AACrD;AACA;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKL,SAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAO,CAAC,GAAGG,KAAJ,CAAP;;AACF,SAAKF,YAAL;AACE,aAAOE,KAAK,CAACI,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaH,OAAnC,CAAP;;AACF;AACE,aAAOH,KAAP;AAbJ;AAeD","sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n// eslint-disable-next-line\r\nexport default function (state = initialState, action) {\r\n  //type of action.. payload is the data\r\n  //deconstruct action\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      //...state copies the state pass in props (state = initialState, action)\r\n      // return [...state, payload] state and payload so it can inform redux of the state\r\n      // payload is the content pass such from the reducer\r\n      // EXAMPLE dispatch({\r\n      //    type: SET_ALERT,\r\n      //    payload: { msg, alertType, id },\r\n      //  });\r\n      return [...state];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
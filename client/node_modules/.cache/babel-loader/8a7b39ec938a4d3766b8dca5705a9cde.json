{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({\n  addPost\n}) => {\n  _s();\n\n  //const [text, setText] = useState(\"\");\n  const [formData, setFormData] = useState({\n    text: \"\",\n    articleImage: \"\"\n  });\n  const [image, setImage] = useState(\"\");\n  const [imageName, setImageName] = useState(\"Choose files\");\n  const {\n    text\n  } = formData;\n\n  const onFileChange = c => {\n    setImage(c.target.files[0]);\n    setImageName(c.target.files[0].name);\n  };\n\n  const onChange = c => {\n    setFormData({ ...formData,\n      [c.target.name]: c.target.value\n    });\n  };\n\n  const payload = new FormData();\n  payload.append(\"text\", formData.text);\n  payload.append(\"articleImage\", image);\n\n  const onSubmit = c => {\n    c.preventDefault();\n    addPost(payload);\n    setFormData(\" \");\n    setImageName(\"Choose file\");\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      encType: \"multipart/form-data\",\n      onSubmit: c => onSubmit(c),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"2\",\n        placeholder: \"Create a post\",\n        value: text,\n        onChange: c => onChange(c),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-dark my-1\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [\"Upload Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: c => onFileChange(c),\n            accept: \"image/*\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"JxT91ggJVeXeXdZNzRNGJNJ3CKs=\");\n\n_c = PostForm;\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(PostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostForm.js"],"names":["React","useState","PropTypes","connect","addPost","PostForm","formData","setFormData","text","articleImage","image","setImage","imageName","setImageName","onFileChange","c","target","files","name","onChange","value","payload","FormData","append","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  //const [text, setText] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    text: \"\",\r\n    articleImage: \"\",\r\n  });\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageName, setImageName] = useState(\"Choose files\");\r\n\r\n  const { text } = formData;\r\n  const onFileChange = c => {\r\n    setImage(c.target.files[0]);\r\n    setImageName(c.target.files[0].name);\r\n  };\r\n\r\n  const onChange = c => {\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n  };\r\n\r\n  const payload = new FormData();\r\n  payload.append(\"text\", formData.text);\r\n  payload.append(\"articleImage\", image);\r\n\r\n  const onSubmit = c => {\r\n    c.preventDefault();\r\n    addPost(payload);\r\n    setFormData(\" \");\r\n    setImageName(\"Choose file\");\r\n  };\r\n\r\n  //\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <form\r\n        className='form my-1'\r\n        encType='multipart/form-data'\r\n        onSubmit={c => onSubmit(c)}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='2'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={c => onChange(c)}\r\n          required\r\n        ></textarea>\r\n\r\n        {/* add image button here */}\r\n        <div>\r\n          <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n          <label htmlFor='file'>\r\n            Upload Photo\r\n            <input\r\n              type='file'\r\n              onChange={c => onFileChange(c)}\r\n              accept='image/*'\r\n              multiple\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n"]},"metadata":{},"sourceType":"module"}
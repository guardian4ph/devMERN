{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_OPCEN_PROFILE, PROFILE_OPCEN_ERROR // UPDATE_OPCEN_PROFILE,\n, CLEAR_OPCEN_PROFILE // ACCOUNT_OPCEN_DELETED,\n, GET_OPCEN_PROFILES } from \"./types\"; //Get All user profile\n\nexport const getOpcenProfile = () => async dispatch => {\n  dispatch({\n    type: CLEAR_OPCEN_PROFILE\n  });\n\n  try {\n    //   change this\n    const res = await axios.get(\"/api/opcen_profile/opcenprofiles\");\n    dispatch({\n      type: GET_OPCEN_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_OPCEN_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get profile by ID\n\nexport const getOpcenProfileById = opcen_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/opcen_profile/profile/${opcen_id}`);\n    dispatch({\n      type: GET_OPCEN_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_OPCEN_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or Update\n\nexport const createOpcenProfile = (formData, history, edit = false) => async dispatch => {\n  console.log(\"create opcen profile\");\n\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const res = await axios.post(\"/api/opcen_profile\", formData, config);\n    dispatch({\n      type: GET_OPCEN_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"./operation-center\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_OPCEN_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // //Add Facilities\n// export const addExperience = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n//     const res = await axios.put(\"/api/profile/experience\", formData, config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Trainings added\", \"success\"));\n//     history.push(\"./dashboard\");\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status },\n//     });\n//   }\n// };\n// //Add Responder\n// export const addEducation = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n//     const res = await axios.put(\"/api/profile/education\", formData, config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Education Added\", \"success\"));\n//     history.push(\"./dashboard\");\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status },\n//     });\n//   }\n// };\n// // Delete Experience\n// export const deleteExperience = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`api/profile/experience/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Experience Deleted\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status },\n//     });\n//   }\n// };\n// // Delete Education\n// export const deleteEducation = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`api/profile/education/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Education Deleted\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status },\n//     });\n//   }\n// };\n// //Delete account and profile\n// export const deleteAccount = () => async dispatch => {\n//   if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n//     try {\n//       await axios.delete(\"api/profile\");\n//       dispatch({\n//         type: CLEAR_PROFILE,\n//       });\n//       dispatch({\n//         type: ACCOUNT_DELETED,\n//       });\n//       dispatch(setAlert(\"Your account has been permanently DELETED\"));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status },\n//       });\n//     }\n//   }\n// };\n// //Add Experience\n// export const addEmergencyInfo = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n//     const res = await axios.put(\"/api/profile/emergencyinfo\", formData, config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Emergency information added\", \"success\"));\n//     history.push(\"./dashboard\");\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status },\n//     });\n//   }\n// };","map":{"version":3,"sources":["D:/1App/client/src/actions/opcenprofile.js"],"names":["axios","setAlert","GET_OPCEN_PROFILE","PROFILE_OPCEN_ERROR","CLEAR_OPCEN_PROFILE","GET_OPCEN_PROFILES","getOpcenProfile","dispatch","type","res","get","payload","data","err","msg","response","status","getOpcenProfileById","opcen_id","statusText","createOpcenProfile","formData","history","edit","console","log","config","headers","post","push","errors","forEach","error"],"mappings":"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":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  GET_OPCEN_PROFILE,\r\n  PROFILE_OPCEN_ERROR,\r\n  // UPDATE_OPCEN_PROFILE,\r\n  CLEAR_OPCEN_PROFILE,\r\n  // ACCOUNT_OPCEN_DELETED,\r\n  GET_OPCEN_PROFILES,\r\n} from \"./types\";\r\n\r\n//Get All user profile\r\nexport const getOpcenProfile = () => async dispatch => {\r\n  dispatch({ type: CLEAR_OPCEN_PROFILE });\r\n  try {\r\n    //   change this\r\n    const res = await axios.get(\"/api/opcen_profile/opcenprofiles\");\r\n    dispatch({\r\n      type: GET_OPCEN_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_OPCEN_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n//Get profile by ID\r\nexport const getOpcenProfileById = opcen_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/opcen_profile/profile/${opcen_id}`);\r\n    dispatch({\r\n      type: GET_OPCEN_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_OPCEN_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or Update\r\n\r\nexport const createOpcenProfile =\r\n  (formData, history, edit = false) =>\r\n  async dispatch => {\r\n    console.log(\"create opcen profile\");\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const res = await axios.post(\"/api/opcen_profile\", formData, config);\r\n\r\n      dispatch({\r\n        type: GET_OPCEN_PROFILE,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")\r\n      );\r\n\r\n      if (!edit) {\r\n        history.push(\"./operation-center\");\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n      dispatch({\r\n        type: PROFILE_OPCEN_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n// //Add Facilities\r\n\r\n// export const addExperience = (formData, history) => async dispatch => {\r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n//     const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(setAlert(\"Trainings added\", \"success\"));\r\n\r\n//     history.push(\"./dashboard\");\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n//     if (errors) {\r\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     }\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status },\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Add Responder\r\n\r\n// export const addEducation = (formData, history) => async dispatch => {\r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n//     const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n//     history.push(\"./dashboard\");\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n//     if (errors) {\r\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     }\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status },\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Delete Experience\r\n\r\n// export const deleteExperience = id => async dispatch => {\r\n//   try {\r\n//     const res = await axios.delete(`api/profile/experience/${id}`);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(setAlert(\"Experience Deleted\", \"success\"));\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status },\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Delete Education\r\n\r\n// export const deleteEducation = id => async dispatch => {\r\n//   try {\r\n//     const res = await axios.delete(`api/profile/education/${id}`);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(setAlert(\"Education Deleted\", \"success\"));\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status },\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Delete account and profile\r\n\r\n// export const deleteAccount = () => async dispatch => {\r\n//   if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n//     try {\r\n//       await axios.delete(\"api/profile\");\r\n//       dispatch({\r\n//         type: CLEAR_PROFILE,\r\n//       });\r\n//       dispatch({\r\n//         type: ACCOUNT_DELETED,\r\n//       });\r\n\r\n//       dispatch(setAlert(\"Your account has been permanently DELETED\"));\r\n//     } catch (err) {\r\n//       dispatch({\r\n//         type: PROFILE_ERROR,\r\n//         payload: { msg: err.response.statusText, status: err.response.status },\r\n//       });\r\n//     }\r\n//   }\r\n// };\r\n\r\n// //Add Experience\r\n\r\n// export const addEmergencyInfo = (formData, history) => async dispatch => {\r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n//     const res = await axios.put(\"/api/profile/emergencyinfo\", formData, config);\r\n\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(setAlert(\"Emergency information added\", \"success\"));\r\n\r\n//     history.push(\"./dashboard\");\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n//     if (errors) {\r\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     }\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status },\r\n//     });\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}
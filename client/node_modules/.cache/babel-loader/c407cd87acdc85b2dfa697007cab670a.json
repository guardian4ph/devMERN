{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\nimport { send } from \"../../utils/push\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\"; // import io from \"socket.io-client\";\n\nconst PostForm = ({\n  addPost\n}) => {\n  _s();\n\n  //const [text, setText] = useState(\"\");\n  const [formData, setFormData] = useState({\n    text: \"\",\n    articleImage: \"\"\n  });\n  const [image, setImage] = useState(\"\");\n  const [imageName, setImageName] = useState(\"\"); // const [socket, setSocket] = useState(null);\n  // useEffect(() => {\n  //   setSocket(io(\"ws://localhost:8900\"));\n  // }, []);\n  // console.log(socket);\n  // // useEffect(() => {\n  // //   socket?.on(\"welcome\", m => {\n  // //     console.log(\"Socket Server\", m);\n  // //   });\n  // // }, [socket]);\n  // useEffect(() => {\n  //   getOpcenProfileById(_id);\n  // });\n\n  const {\n    text\n  } = formData;\n\n  const onFileChange = c => {\n    setImage(c.target.files[0]);\n    setImageName(c.target.files[0].name);\n  };\n\n  const onChange = c => {\n    setFormData({ ...formData,\n      [c.target.name]: c.target.value\n    });\n  };\n\n  const payload = new FormData();\n  payload.append(\"text\", text);\n  payload.append(\"articleImage\", image);\n\n  const onSubmit = c => {\n    c.preventDefault();\n    addPost(payload);\n    setFormData({\n      text: \"\",\n      articleImage: \"\"\n    });\n    setImageName(\" \"); // send(\"GUARDIAN NOTIFICATION\", `${text}`);\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment bg-white\",\n    style: {\n      margin: \"10px 0px 10px 0px\",\n      padding: \"2px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary m-1\",\n      children: \" Quick Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        marginLeft: \"20px\",\n        top: \"0\"\n      },\n      children: \"Accepts photo attachment only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      encType: \"multipart/form-data\",\n      onSubmit: c => onSubmit(c),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \" 2fr .5fr\",\n          gridGap: \"5px\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"text\",\n          cols: \"30\",\n          rows: \"2\",\n          placeholder: \"Message\",\n          value: text,\n          onChange: c => onChange(c),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-dark my-1\",\n            style: {\n              width: \"100%\",\n              margin: \"auto\"\n            },\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-dark my-1\",\n          type: \"file\",\n          onChange: c => onFileChange(c),\n          accept: \"image/*,video/mp4,video/x-m4v,video/*\",\n          single: true,\n          placeholder: imageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"3mkwdV5eARBmqgIJVn6wiPCSwfU=\");\n\n_c = PostForm;\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({// opcen_id: state.opcen.opcen._id,\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(PostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostForm.js"],"names":["React","useState","useEffect","PropTypes","connect","addPost","send","getOpcenProfileById","PostForm","formData","setFormData","text","articleImage","image","setImage","imageName","setImageName","onFileChange","c","target","files","name","onChange","value","payload","FormData","append","onSubmit","preventDefault","margin","padding","marginLeft","top","display","gridTemplateColumns","gridGap","alignContent","alignItems","justifyContent","width","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,mBAAT,QAAoC,4BAApC,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,YAAY,EAAE;AAFyB,GAAD,CAAxC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C,CARgC,CAShC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAWF,QAAjB;;AACA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACAJ,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAZ;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AACpBR,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACS,CAAC,CAACC,MAAF,CAASE,IAAV,GAAiBH,CAAC,CAACC,MAAF,CAASI;AAAzC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuBf,IAAvB;AACAa,EAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+Bb,KAA/B;;AAEA,QAAMc,QAAQ,GAAGT,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACU,cAAF;AACAvB,IAAAA,OAAO,CAACmB,OAAD,CAAP;AACAd,IAAAA,WAAW,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAAD,CAAX;AACAI,IAAAA,YAAY,CAAC,GAAD,CAAZ,CAJoB,CAKpB;AACD,GAND,CAxCgC,CAgDhC;;;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,OAAO,EAAE;AAAxC,KAFT;AAAA,4BAIE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,GAAG,EAAE;AAA3B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAC,qBAFV;AAGE,MAAA,QAAQ,EAAEd,CAAC,IAAIS,QAAQ,CAACT,CAAD,CAHzB;AAAA,6BAKE;AACE,QAAA,KAAK,EAAE;AACLe,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,mBAAmB,EAAE,WAFhB;AAGLC,UAAAA,OAAO,EAAE,KAHJ;AAILC,UAAAA,YAAY,EAAE,QAJT;AAKLC,UAAAA,UAAU,EAAE,QALP;AAMLC,UAAAA,cAAc,EAAE,QANX;AAOLT,UAAAA,MAAM,EAAE;AAPH,SADT;AAAA,gCAWE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,IAAI,EAAC,GAHP;AAIE,UAAA,WAAW,EAAC,SAJd;AAKE,UAAA,KAAK,EAAElB,IALT;AAME,UAAA,QAAQ,EAAEO,CAAC,IAAII,QAAQ,CAACJ,CAAD,CANzB;AAOE,UAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,gBAXF,eAoBE;AAAA,iCAEE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAGE,YAAA,KAAK,EAAE;AAAEqB,cAAAA,KAAK,EAAE,MAAT;AAAiBV,cAAAA,MAAM,EAAE;AAAzB,aAHT;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBApBF,eA+BE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEX,CAAC,IAAID,YAAY,CAACC,CAAD,CAH7B;AAIE,UAAA,MAAM,EAAC,uCAJT;AAKE,UAAA,MAAM,MALR;AAME,UAAA,WAAW,EAAEH;AANf;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CA9GD;;GAAMP,Q;;KAAAA,Q;AAgHNA,QAAQ,CAACgC,SAAT,GAAqB;AACnBnC,EAAAA,OAAO,EAAEF,SAAS,CAACsC,IAAV,CAAeC;AADL,CAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK,CAChC;AADgC,CAAL,CAA7B;;AAIA,eAAexC,OAAO,CAACuC,eAAD,EAAkB;AAAEtC,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,QAAtC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\nimport { send } from \"../../utils/push\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\n// import io from \"socket.io-client\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  //const [text, setText] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    text: \"\",\r\n    articleImage: \"\",\r\n  });\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageName, setImageName] = useState(\"\");\r\n  // const [socket, setSocket] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   setSocket(io(\"ws://localhost:8900\"));\r\n  // }, []);\r\n\r\n  // console.log(socket);\r\n  // // useEffect(() => {\r\n  // //   socket?.on(\"welcome\", m => {\r\n  // //     console.log(\"Socket Server\", m);\r\n  // //   });\r\n  // // }, [socket]);\r\n\r\n  // useEffect(() => {\r\n  //   getOpcenProfileById(_id);\r\n  // });\r\n\r\n  const { text } = formData;\r\n  const onFileChange = c => {\r\n    setImage(c.target.files[0]);\r\n    setImageName(c.target.files[0].name);\r\n  };\r\n\r\n  const onChange = c => {\r\n    setFormData({ ...formData, [c.target.name]: c.target.value });\r\n  };\r\n\r\n  const payload = new FormData();\r\n  payload.append(\"text\", text);\r\n  payload.append(\"articleImage\", image);\r\n\r\n  const onSubmit = c => {\r\n    c.preventDefault();\r\n    addPost(payload);\r\n    setFormData({ text: \"\", articleImage: \"\" });\r\n    setImageName(\" \");\r\n    // send(\"GUARDIAN NOTIFICATION\", `${text}`);\r\n  };\r\n\r\n  //\r\n\r\n  return (\r\n    <div\r\n      className='comment bg-white'\r\n      style={{ margin: \"10px 0px 10px 0px\", padding: \"2px\" }}\r\n    >\r\n      <h1 className='large text-primary m-1'> Quick Notification</h1>\r\n      <small style={{ marginLeft: \"20px\", top: \"0\" }}>\r\n        Accepts photo attachment only\r\n      </small>\r\n\r\n      <form\r\n        className='form my-1'\r\n        encType='multipart/form-data'\r\n        onSubmit={c => onSubmit(c)}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \" 2fr .5fr\",\r\n            gridGap: \"5px\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            margin: \"5px\",\r\n          }}\r\n        >\r\n          <textarea\r\n            name='text'\r\n            cols='30'\r\n            rows='2'\r\n            placeholder='Message'\r\n            value={text}\r\n            onChange={c => onChange(c)}\r\n            required\r\n          ></textarea>\r\n          <div>\r\n            {/* <label htmlFor='file'> */}\r\n            <input\r\n              type='submit'\r\n              className='btn btn-dark my-1'\r\n              style={{ width: \"100%\", margin: \"auto\" }}\r\n              value='Send'\r\n            />\r\n\r\n            {/* </label> */}\r\n          </div>\r\n          <input\r\n            className='btn btn-dark my-1'\r\n            type='file'\r\n            onChange={c => onFileChange(c)}\r\n            accept='image/*,video/mp4,video/x-m4v,video/*'\r\n            single\r\n            placeholder={imageName}\r\n          />\r\n        </div>\r\n\r\n        {/* add image button here */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // opcen_id: state.opcen.opcen._id,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPost })(PostForm);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\PostImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getimagePost } from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\n\nconst ImagePost = ({\n  getimagePost,\n  post: {\n    _id,\n    artilcleImage,\n    text,\n    name\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getimagePost(match.params.id);\n  }, [getPost, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"post-profile\",\n        src: `/img/${artilcleImage}`,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImagePost;\nImagePost.propTypes = {\n  getimagePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getimagePost\n})(ImagePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePost\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/PostImage.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getimagePost","PostItem","ImagePost","post","_id","artilcleImage","text","name","match","params","id","getPost","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBF,EAAAA,YADiB;AAEjBG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,aAAP;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,GAFW;AAGjBC,EAAAA;AAHiB,CAAD,KAIZ;AAAA;;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,EAEN,CAACC,OAAD,EAAUH,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAGA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAG,QAAOL,aAAc,EAAzD;AAA4D,QAAA,GAAG,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;GAAMH,S;;KAAAA,S;AAiBNA,SAAS,CAACU,SAAV,GAAsB;AACpBZ,EAAAA,YAAY,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADT;AAEpBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAFH,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getimagePost } from \"../../actions/post\";\r\nimport PostItem from \"../posts/PostItem\";\r\n\r\nconst ImagePost = ({\r\n  getimagePost,\r\n  post: { _id, artilcleImage, text, name },\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getimagePost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n  return (\r\n    <Fragment>\r\n      <div className='posts'>\r\n        <img className='post-profile' src={`/img/${artilcleImage}`} alt='...' />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImagePost.propTypes = {\r\n  getimagePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getimagePost })(ImagePost);\r\n"]},"metadata":{},"sourceType":"module"}
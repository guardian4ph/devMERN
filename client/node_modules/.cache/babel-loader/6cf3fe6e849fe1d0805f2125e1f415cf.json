{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\profile\\\\id.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\n\nconst Id = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#fff\",\n        padding: \"1rem\",\n        borderRadius: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), \" Welcome, \", user && user.name, \" \", user && user.lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-profile\",\n          className: \"btn btn-primary my-1\",\n          children: [\" \", \"Create Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Id, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Id;\nId.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Id);\n\nvar _c;\n\n$RefreshReg$(_c, \"Id\");","map":{"version":3,"sources":["D:/1App/client/src/components/profile/id.js"],"names":["React","useEffect","Fragment","PropTypes","getCurrentProfile","connect","Spinner","Link","Id","auth","user","profile","loading","background","padding","borderRadius","name","lname","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,EAAE,GAAG,CAAC;AACVJ,EAAAA,iBADU;AAEVK,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFI;AAGVC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHC,CAAD,KAIL;AAAA;;AACJX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SAAOQ,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,OAAO,EAAE,MAA/B;AAAuCC,QAAAA,YAAY,EAAE;AAArD,OAAZ;AAAA,8BAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,gBAC4CL,IAAI,IAAIA,IAAI,CAACM,IADzD,EAC+D,GAD/D,EAEGN,IAAI,IAAIA,IAAI,CAACO,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGN,OAAO,KAAK,IAAZ,gBACC,QAAC,QAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,QAAC,QAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,iBAAT;AAA2B,UAAA,SAAS,EAAC,sBAArC;AAAA,qBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAyBD,CAlCD;;GAAMH,E;;KAAAA,E;AAoCNA,EAAE,CAACU,SAAH,GAAe;AACbd,EAAAA,iBAAiB,EAAED,SAAS,CAACgB,IAAV,CAAeC,UADrB;AAGbX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAHV,CAAf;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AACA,eAAelB,OAAO,CAACiB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAgDI,EAAhD,CAAf","sourcesContent":["import { React, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentProfile } from \"../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Id = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div style={{ background: \"#fff\", padding: \"1rem\", borderRadius: \"5px\" }}>\r\n        {/* <h1 className='large text-primary'>Profile Dashboard</h1> */}\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Welcome, {user && user.name}{\" \"}\r\n          {user && user.lname}\r\n        </p>\r\n        {profile !== null ? (\r\n          <Fragment>\r\n            <div> </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Link to='/create-profile' className='btn btn-primary my-1'>\r\n              {\" \"}\r\n              Create Profile\r\n            </Link>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nId.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Id);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\opcens\\\\OpcenConsole.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Dashboard from \"../operation-center/Dashboard_opcen\";\nimport Spinner from \"../layout/Spinner\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\nimport { withRouter } from \"react-router\";\n\nconst OpcenConsole = ({\n  getOpcenProfileById,\n  opcen_id,\n  opcen: {\n    opcen,\n    loading\n  },\n  opcen_profile\n}) => {\n  _s();\n\n  useEffect(() => {\n    getOpcenProfileById(opcen_id);\n  }, [getOpcenProfileById]);\n  console.log(opcen_profile);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [loading || opcen === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        marginBottom: \"5px\",\n        height: \"100px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            height: \"88px\",\n            width: \"88px\",\n            padding: \"8px\"\n          },\n          src: `/img/Spotter.png`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", opcen.name, \" Console\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", opcen.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OpcenConsole, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OpcenConsole;\nOpcenConsole.propTypes = {\n  getOpcenProfileById: PropTypes.func.isRequired,\n  opcen: PropTypes.object.isRequired,\n  opcen_id: PropTypes.object.isRequired,\n  opcen_profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  opcen: state.opcen,\n  opcen_id: state.opcen.opcen._id,\n  opcen_profile: state.opcen_profile\n});\n\nexport default connect(mapStateToProps, {\n  getOpcenProfileById\n})(withRouter(OpcenConsole));\n\nvar _c;\n\n$RefreshReg$(_c, \"OpcenConsole\");","map":{"version":3,"sources":["D:/1App/client/src/components/opcens/OpcenConsole.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Dashboard","Spinner","getOpcenProfileById","withRouter","OpcenConsole","opcen_id","opcen","loading","opcen_profile","console","log","display","flexDirection","justifyContent","alignItems","background","borderRadius","marginBottom","height","width","padding","name","category","propTypes","func","isRequired","object","mapStateToProps","state","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBF,EAAAA,mBADoB;AAEpBG,EAAAA,QAFoB;AAGpBC,EAAAA,KAAK,EAAE;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAHa;AAIpBC,EAAAA;AAJoB,CAAD,KAKf;AAAA;;AACJX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,mBAAmB,CAACG,QAAD,CAAnB;AACD,GAFQ,EAEN,CAACH,mBAAD,CAFM,CAAT;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAEA,sBACE,QAAC,QAAD;AAAA,eACGD,OAAO,IAAID,KAAK,KAAK,IAArB,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,cAAc,EAAE,YAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,UAAU,EAAE,MALP;AAMLC,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,YAAY,EAAE,KAPT;AAQLC,QAAAA,MAAM,EAAE;AARH,OADT;AAAA,8BAYE;AAAA,+BACE;AACE,UAAA,KAAK,EAAE;AACLA,YAAAA,MAAM,EAAE,MADH;AAELC,YAAAA,KAAK,EAAE,MAFF;AAGLC,YAAAA,OAAO,EAAE;AAHJ,WADT;AAME,UAAA,GAAG,EAAG,kBANR;AAOE,UAAA,GAAG,EAAC;AAPN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAA,gCACE;AAAA,0BAAMd,KAAK,CAACe,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAKf,KAAK,CAACgB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAiCE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAjDD;;GAAMlB,Y;;KAAAA,Y;AAmDNA,YAAY,CAACmB,SAAb,GAAyB;AACvBrB,EAAAA,mBAAmB,EAAEJ,SAAS,CAAC0B,IAAV,CAAeC,UADb;AAEvBnB,EAAAA,KAAK,EAAER,SAAS,CAAC4B,MAAV,CAAiBD,UAFD;AAGvBpB,EAAAA,QAAQ,EAAEP,SAAS,CAAC4B,MAAV,CAAiBD,UAHJ;AAIvBjB,EAAAA,aAAa,EAAEV,SAAS,CAAC4B,MAAV,CAAiBD;AAJT,CAAzB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCtB,EAAAA,KAAK,EAAEsB,KAAK,CAACtB,KADmB;AAEhCD,EAAAA,QAAQ,EAAEuB,KAAK,CAACtB,KAAN,CAAYA,KAAZ,CAAkBuB,GAFI;AAGhCrB,EAAAA,aAAa,EAAEoB,KAAK,CAACpB;AAHW,CAAL,CAA7B;;AAMA,eAAeT,OAAO,CAAC4B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CACbC,UAAU,CAACC,YAAD,CADG,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Dashboard from \"../operation-center/Dashboard_opcen\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst OpcenConsole = ({\r\n  getOpcenProfileById,\r\n  opcen_id,\r\n  opcen: { opcen, loading },\r\n  opcen_profile,\r\n}) => {\r\n  useEffect(() => {\r\n    getOpcenProfileById(opcen_id);\r\n  }, [getOpcenProfileById]);\r\n\r\n  console.log(opcen_profile);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading || opcen === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            background: \"#fff\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"5px\",\r\n            height: \"100px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"88px\",\r\n                width: \"88px\",\r\n                padding: \"8px\",\r\n              }}\r\n              src={`/img/Spotter.png`}\r\n              alt=''\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2> {opcen.name} Console</h2>\r\n            <p> {opcen.category}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Dashboard />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nOpcenConsole.propTypes = {\r\n  getOpcenProfileById: PropTypes.func.isRequired,\r\n  opcen: PropTypes.object.isRequired,\r\n  opcen_id: PropTypes.object.isRequired,\r\n  opcen_profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  opcen: state.opcen,\r\n  opcen_id: state.opcen.opcen._id,\r\n  opcen_profile: state.opcen_profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOpcenProfileById })(\r\n  withRouter(OpcenConsole)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
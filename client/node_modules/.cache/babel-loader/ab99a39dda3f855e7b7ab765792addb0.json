{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_OPCEN, ERROR_CREATE_OPCEN, OPCEN_REGISTER_SUCCESS, OPCEN_REGISTER_FAIL, GET_OPCEN, GET_OPCEN_FAIL, GET_OPCENS, GET_OPCENS_FAIL //   DELETE_OPCEN,\n//   UPDATE_OPCEN,\n//   ADD_ADMIN,\n//   DELETE_ADMIN,\n} from \"./types\";\nimport { setAlert } from \"./alert\";\nexport const setCreateOpCen = opcenType => dispatch => {\n  try {\n    dispatch({\n      type: CREATE_OPCEN,\n      payload: opcenType\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_CREATE_OPCEN,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const registerOpcen = ({\n  user,\n  name,\n  category,\n  description,\n  type\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user,\n    name,\n    category,\n    description,\n    type\n  });\n\n  try {\n    const res = await axios.post(\"api/operation_center\", body, config);\n    dispatch({\n      type: OPCEN_REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: OPCEN_REGISTER_FAIL\n    });\n  }\n}; //Get post\n\nexport const getOpcens = user_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/operation_center/myopcen/${user_id}`);\n    dispatch({\n      type: GET_OPCENS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_OPCENS_FAIL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getOpcen = (user, _id) => async dispatch => {\n  console.log(\"opcen hit\");\n\n  try {\n    const res = await axios.get(`/api/operation_center/myopcen/${user}/${_id}`);\n    dispatch({\n      type: GET_OPCEN,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_OPCEN_FAIL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/1App/client/src/actions/opcen.js"],"names":["axios","CREATE_OPCEN","ERROR_CREATE_OPCEN","OPCEN_REGISTER_SUCCESS","OPCEN_REGISTER_FAIL","GET_OPCEN","GET_OPCEN_FAIL","GET_OPCENS","GET_OPCENS_FAIL","setAlert","setCreateOpCen","opcenType","dispatch","type","payload","err","msg","response","statusText","status","registerOpcen","user","name","category","description","config","headers","body","JSON","stringify","res","post","data","errors","forEach","error","getOpcens","user_id","get","getOpcen","_id","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CREATE_OPCEN,\r\n  ERROR_CREATE_OPCEN,\r\n  OPCEN_REGISTER_SUCCESS,\r\n  OPCEN_REGISTER_FAIL,\r\n  GET_OPCEN,\r\n  GET_OPCEN_FAIL,\r\n  GET_OPCENS,\r\n  GET_OPCENS_FAIL,\r\n  //   DELETE_OPCEN,\r\n  //   UPDATE_OPCEN,\r\n  //   ADD_ADMIN,\r\n  //   DELETE_ADMIN,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const setCreateOpCen = opcenType => dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: CREATE_OPCEN,\r\n      payload: opcenType,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERROR_CREATE_OPCEN,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const registerOpcen = ({\r\n  user,\r\n  name,\r\n  category,\r\n  description,\r\n  type,\r\n}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ user, name, category, description, type });\r\n  try {\r\n    const res = await axios.post(\"api/operation_center\", body, config);\r\n    dispatch({\r\n      type: OPCEN_REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: OPCEN_REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Get post\r\n\r\nexport const getOpcens = user_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/operation_center/myopcen/${user_id}`);\r\n    dispatch({\r\n      type: GET_OPCENS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_OPCENS_FAIL,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOpcen = (user, _id) => async dispatch => {\r\n  console.log(\"opcen hit\");\r\n  try {\r\n    const res = await axios.get(`/api/operation_center/myopcen/${user}/${_id}`);\r\n    dispatch({\r\n      type: GET_OPCEN,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_OPCEN_FAIL,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
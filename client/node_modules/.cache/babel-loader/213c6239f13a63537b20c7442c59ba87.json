{"ast":null,"code":"import { CREATE_OPCEN, ERROR_CREATE_OPCEN, OPCEN_REGISTER_SUCCESS, OPCEN_REGISTER_FAIL //   DELETE_OPCEN,\n//   UPDATE_OPCEN,\n//   ADD_ADMIN,\n//   DELETE_ADMIN,\n} from \"./types\";\nexport const setCreateOpCen = opcenType => dispatch => {\n  try {\n    dispatch({\n      type: CREATE_OPCEN,\n      payload: {\n        opcenType\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_CREATE_OPCEN,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const registerOpcen = ({\n  _id,\n  name,\n  category,\n  number,\n  description\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    _id,\n    name,\n    category,\n    number,\n    description\n  });\n\n  try {\n    const res = await axios.post(\"/api/opcen\", body, config);\n    dispatch({\n      type: OPCEN_REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: OPCEN_REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/1App/client/src/actions/opcen.js"],"names":["CREATE_OPCEN","ERROR_CREATE_OPCEN","OPCEN_REGISTER_SUCCESS","OPCEN_REGISTER_FAIL","setCreateOpCen","opcenType","dispatch","type","payload","err","msg","response","statusText","status","registerOpcen","_id","name","category","number","description","config","headers","body","JSON","stringify","res","axios","post","data","errors","forEach","error","setAlert"],"mappings":"AAAA,SACEA,YADF,EAEEC,kBAFF,EAGEC,sBAHF,EAIEC,mBAJF,CAKE;AACA;AACA;AACA;AARF,OASO,SATP;AAWA,OAAO,MAAMC,cAAc,GAAGC,SAAS,IAAIC,QAAQ,IAAI;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,YADC;AAEPQ,MAAAA,OAAO,EAAE;AAAEH,QAAAA;AAAF;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAOI,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,kBADC;AAEPO,MAAAA,OAAO,EAAE;AAAEE,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAZM;AAcP,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,GAD4B;AAE5BC,EAAAA,IAF4B;AAG5BC,EAAAA,QAH4B;AAI5BC,EAAAA,MAJ4B;AAK5BC,EAAAA;AAL4B,CAAD,KAMvB,MAAMb,QAAN,IAAkB;AACtB,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAET,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA;AAA/B,GAAf,CAAb;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBL,IAAzB,EAA+BF,MAA/B,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,sBADC;AAEPM,MAAAA,OAAO,EAAEiB,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOnB,GAAP,EAAY;AACZ,UAAMoB,MAAM,GAAGpB,GAAG,CAACE,QAAJ,CAAaiB,IAAb,CAAkBC,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAAC0B,QAAQ,CAACD,KAAK,CAACrB,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGD;AACF,CA7BM","sourcesContent":["import {\r\n  CREATE_OPCEN,\r\n  ERROR_CREATE_OPCEN,\r\n  OPCEN_REGISTER_SUCCESS,\r\n  OPCEN_REGISTER_FAIL,\r\n  //   DELETE_OPCEN,\r\n  //   UPDATE_OPCEN,\r\n  //   ADD_ADMIN,\r\n  //   DELETE_ADMIN,\r\n} from \"./types\";\r\n\r\nexport const setCreateOpCen = opcenType => dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: CREATE_OPCEN,\r\n      payload: { opcenType },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERROR_CREATE_OPCEN,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const registerOpcen = ({\r\n  _id,\r\n  name,\r\n  category,\r\n  number,\r\n  description,\r\n}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ _id, name, category, number, description });\r\n  try {\r\n    const res = await axios.post(\"/api/opcen\", body, config);\r\n    dispatch({\r\n      type: OPCEN_REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: OPCEN_REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
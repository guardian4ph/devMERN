{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getimagePost } from \"../../actions/post\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\"; //match is the id from url from params/props\n\nconst PostItem = ({\n  getimagePost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: [\" \", \"Back to Posts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        postId: post._id\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PostItem;\nPostItem.propTypes = {\n  getiamagePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getimagePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostItem.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getimagePost","Link","CommentForm","CommentItem","PostItem","post","loading","match","getPost","params","id","_id","comments","map","comment","propTypes","getiamagePost","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,YAAF;AAAgBK,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAtB;AAAyCC,EAAAA;AAAzC,CAAD,KAAsD;AAAA;;AACrEX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACF,OAAD,EAAUD,KAAK,CAACE,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAGA,SAAOJ,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA,iBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACM;AAA1B;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGN,IAAI,CAACO,QAAL,CAAcC,GAAd,CAAkBC,OAAO,iBACxB,QAAC,WAAD;AAA+B,QAAA,OAAO,EAAEA,OAAxC;AAAiD,QAAA,MAAM,EAAET,IAAI,CAACM;AAA9D,SAAkBG,OAAO,CAACH,GAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAkBD,CAtBD;;GAAMP,Q;;KAAAA,Q;AAwBNA,QAAQ,CAACW,SAAT,GAAqB;AACnBC,EAAAA,aAAa,EAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADX;AAEnBb,EAAAA,IAAI,EAAER,SAAS,CAACsB,MAAV,CAAiBD;AAFJ,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CI,QAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getimagePost } from \"../../actions/post\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentItem from \"./CommentItem\";\r\n//match is the id from url from params/props\r\n\r\nconst PostItem = ({ getimagePost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        {\" \"}\r\n        Back to Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      {/* loop thru to comments array at the backend then display */}\r\n      <div className='comments'>\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostItem.propTypes = {\r\n  getiamagePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getimagePost })(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}
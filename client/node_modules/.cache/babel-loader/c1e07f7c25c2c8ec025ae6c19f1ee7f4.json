{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident\\\\Incidents.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getIncidents } from \"../../actions/incident\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\nimport Clock from \"react-live-clock\";\nimport Moment from \"react-moment\";\nimport OpcenConsole from \"../opcens/OpcenConsole\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Incidents = ({\n  user,\n  getOpcenProfileById,\n  opcen_id,\n  opcen,\n  opcen_profile: {\n    profile,\n    loading\n  },\n  getIncidents,\n  incidents\n}) => {\n  _s();\n\n  useEffect(() => {\n    getIncidents();\n    getOpcenProfileById();\n  }, []);\n  var date = new Date();\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"95%\",\n        height: \"8%\",\n        display: \"flex\",\n        top: \"0px\",\n        // alignContent: \"center\",\n        // alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginTop: \"10px\",\n        backgroundColor: \"#fff\",\n        padding: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" CURRENT REPORTED INCIDENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"ll\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \", \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Clock, {\n            format: \"HH:mm:ss\",\n            ticking: true,\n            timezone: \"Asia/Manila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Incidents, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Incidents;\nIncidents.propTypes = {\n  getIncidents: PropTypes.func.isRequired,\n  incidents: PropTypes.object.isRequired,\n  opcen: PropTypes.object.isRequired,\n  opcen_id: PropTypes.object.isRequired,\n  opcen_profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  incident: state.incident.incidents,\n  opcen: state.opcen.opcen,\n  opcen_id: state.opcen.opcen._id,\n  opcen_profile: state.opcen_profile,\n  user: state.auth._id\n});\n\nconst mapDispatchToProps = {\n  getIncidents,\n  getOpcenProfileById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\n\nvar _c;\n\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident/Incidents.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","getIncidents","getOpcenProfileById","Clock","Moment","OpcenConsole","Spinner","Incidents","user","opcen_id","opcen","opcen_profile","profile","loading","incidents","date","Date","width","height","display","top","justifyContent","marginTop","backgroundColor","padding","propTypes","func","isRequired","object","mapStateToProps","state","incident","_id","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIncidents } from \"../../actions/incident\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\nimport Clock from \"react-live-clock\";\r\nimport Moment from \"react-moment\";\r\nimport OpcenConsole from \"../opcens/OpcenConsole\";\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Incidents = ({\r\n  user,\r\n  getOpcenProfileById,\r\n  opcen_id,\r\n  opcen,\r\n  opcen_profile: { profile, loading },\r\n  getIncidents,\r\n  incidents,\r\n}) => {\r\n  useEffect(() => {\r\n    getIncidents();\r\n    getOpcenProfileById();\r\n  }, []);\r\n\r\n  var date = new Date();\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      {/* reported incidents */}\r\n      <div\r\n        style={{\r\n          width: \"95%\",\r\n          height: \"8%\",\r\n          display: \"flex\",\r\n          top: \"0px\",\r\n          // alignContent: \"center\",\r\n          // alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: \"10px\",\r\n          backgroundColor: \"#fff\",\r\n          padding: \"5px\",\r\n        }}\r\n      >\r\n        <h1> CURRENT REPORTED INCIDENTS</h1>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <h1>\r\n            <Moment format='ll'>{date}</Moment>\r\n          </h1>\r\n          <h1>, </h1>\r\n          <h1>\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Manila\"}\r\n            />\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nIncidents.propTypes = {\r\n  getIncidents: PropTypes.func.isRequired,\r\n  incidents: PropTypes.object.isRequired,\r\n  opcen: PropTypes.object.isRequired,\r\n  opcen_id: PropTypes.object.isRequired,\r\n  opcen_profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incident: state.incident.incidents,\r\n  opcen: state.opcen.opcen,\r\n  opcen_id: state.opcen.opcen._id,\r\n  opcen_profile: state.opcen_profile,\r\n  user: state.auth._id,\r\n});\r\n\r\nconst mapDispatchToProps = { getIncidents, getOpcenProfileById };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\r\n"]},"metadata":{},"sourceType":"module"}
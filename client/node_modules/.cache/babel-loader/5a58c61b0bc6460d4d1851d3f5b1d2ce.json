{"ast":null,"code":"import axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nimport { SEND_OTP, SEND_OTP_FAIL, REMOVE_OTP, OTP_MATCH, OTP_NOT_MATCH, CHANGE_PASSWORD_FAIL, PASSWORD_CHANGED } from \"./types\";\nimport { setAlert } from \"./alert\";\nexport const sendOtp = (user, number, name, msg, otp, timeout = 300000) => async dispatch => {\n  const id = uuid();\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user,\n    number,\n    name,\n    msg,\n    otp\n  });\n\n  try {\n    const res = await axios.post(\"/api/sms/sendOtp\", body, config);\n    dispatch({\n      type: SEND_OTP,\n      payload: {\n        user,\n        name,\n        id\n      }\n    });\n    console.log(res);\n    setTimeout(() => dispatch({\n      type: REMOVE_OTP,\n      payload: id\n    }), timeout);\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: SEND_OTP_FAIL\n    });\n  }\n};\nexport const otpMatch = (number, sent_otp) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    number,\n    sent_otp\n  });\n\n  try {\n    const res = await axios.post(\"/api/sms/onMatch\", body, config);\n    dispatch({\n      type: OTP_MATCH,\n      payload: {\n        number\n      }\n    });\n    console.log(res);\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: OTP_NOT_MATCH\n    });\n  }\n}; // update user\n\nexport const changepassword = (id, name, lname, number, email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    id,\n    name,\n    lname,\n    number,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/sms/changepassword\", body, config);\n    dispatch({\n      type: PASSWORD_CHANGED,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: CHANGE_PASSWORD_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/App Back-up/1App/client/src/actions/sms.js"],"names":["axios","v4","uuid","SEND_OTP","SEND_OTP_FAIL","REMOVE_OTP","OTP_MATCH","OTP_NOT_MATCH","CHANGE_PASSWORD_FAIL","PASSWORD_CHANGED","setAlert","sendOtp","user","number","name","msg","otp","timeout","dispatch","id","config","headers","body","JSON","stringify","res","post","type","payload","console","log","setTimeout","err","errors","response","data","forEach","error","otpMatch","sent_otp","changepassword","lname","email","password"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport {\r\n  SEND_OTP,\r\n  SEND_OTP_FAIL,\r\n  REMOVE_OTP,\r\n  OTP_MATCH,\r\n  OTP_NOT_MATCH,\r\n  CHANGE_PASSWORD_FAIL,\r\n  PASSWORD_CHANGED,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const sendOtp =\r\n  (user, number, name, msg, otp, timeout = 300000) =>\r\n  async dispatch => {\r\n    const id = uuid();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ user, number, name, msg, otp });\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/sms/sendOtp\", body, config);\r\n      dispatch({\r\n        type: SEND_OTP,\r\n        payload: { user, name, id },\r\n      });\r\n\r\n      console.log(res);\r\n\r\n      setTimeout(() => dispatch({ type: REMOVE_OTP, payload: id }), timeout);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n      dispatch({\r\n        type: SEND_OTP_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const otpMatch = (number, sent_otp) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ number, sent_otp });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/sms/onMatch\", body, config);\r\n    dispatch({\r\n      type: OTP_MATCH,\r\n      payload: { number },\r\n    });\r\n\r\n    console.log(res);\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: OTP_NOT_MATCH,\r\n    });\r\n  }\r\n};\r\n\r\n// update user\r\n\r\nexport const changepassword =\r\n  (id, name, lname, number, email, password) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ id, name, lname, number, email, password });\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/sms/changepassword\", body, config);\r\n      dispatch({\r\n        type: PASSWORD_CHANGED,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_FAIL,\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}
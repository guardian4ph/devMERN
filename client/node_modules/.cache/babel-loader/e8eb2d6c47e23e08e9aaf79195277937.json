{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident\\\\Incidents.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getIncidents } from \"../../actions/incident\";\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\nimport Clock from \"react-live-clock\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Incidents = ({\n  getIncidents,\n  incident: {\n    loading,\n    incidents\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getIncidents();\n    getOpcenProfileById();\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"90%\",\n          height: \"10%\",\n          display: \"flex\",\n          top: \"0px\",\n          // alignContent: \"center\",\n          // alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CURRENT INCIDENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Clock, {\n            format: \"HH:mm:ss\",\n            ticking: true,\n            timezone: \"Asia/Manila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Incidents, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Incidents;\nIncidents.propTypes = {\n  getIncidents: PropTypes.func.isRequired,\n  incident: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  incident: state.incident\n});\n\nconst mapDispatchToProps = {\n  getIncidents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\n\nvar _c;\n\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident/Incidents.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","getIncidents","getOpcenProfileById","Clock","Spinner","Incidents","incident","loading","incidents","width","height","display","top","justifyContent","propTypes","func","isRequired","object","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,YAAF;AAAgBK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAA1B,CAAD,KAAwD;AAAA;;AACxEX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACZC,IAAAA,mBAAmB;AACpB,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOK,OAAO,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,GAAG,EAAE,KAJA;AAKL;AACA;AACAC,UAAAA,cAAc,EAAE;AAPX,SADT;AAAA,gCAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,MAAM,EAAE,UADV;AAEE,YAAA,OAAO,EAAE,IAFX;AAGE,YAAA,QAAQ,EAAE;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AA4BD,CAlCD;;GAAMR,S;;KAAAA,S;AAoCNA,SAAS,CAACS,SAAV,GAAsB;AACpBb,EAAAA,YAAY,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADT;AAEpBV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,MAAV,CAAiBD;AAFP,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,QAAQ,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA7B;;AAIA,MAAMc,kBAAkB,GAAG;AAAEnB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIncidents } from \"../../actions/incident\";\r\nimport { getOpcenProfileById } from \"../../actions/opcenprofile\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Incidents = ({ getIncidents, incident: { loading, incidents } }) => {\r\n  useEffect(() => {\r\n    getIncidents();\r\n    getOpcenProfileById();\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className='full'>\r\n        <div\r\n          style={{\r\n            width: \"90%\",\r\n            height: \"10%\",\r\n            display: \"flex\",\r\n            top: \"0px\",\r\n            // alignContent: \"center\",\r\n            // alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <h1>CURRENT INCIDENTS</h1>\r\n          <h1>\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Manila\"}\r\n            />\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nIncidents.propTypes = {\r\n  getIncidents: PropTypes.func.isRequired,\r\n  incident: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incident: state.incident,\r\n});\r\n\r\nconst mapDispatchToProps = { getIncidents };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incidents);\r\n"]},"metadata":{},"sourceType":"module"}
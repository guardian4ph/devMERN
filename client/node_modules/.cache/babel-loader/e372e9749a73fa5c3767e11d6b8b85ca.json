{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostItemLarge.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nconst MAX_LENGTH = 150;\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  profile: {\n    profiles,\n    loading\n  },\n  post: {\n    _id,\n    text,\n    name,\n    lname,\n    articleImage,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-large bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#eee\",\n          margin: \"auto\",\n          maxWidth: \"80%\",\n          maxWidth: \"80%\",\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${_id}/${articleImage}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            // style={{ width: \"305px\", borderRadius: \"5px\" }}\n            className: \"postImageLarge\",\n            src: `/img/${articleImage}`,\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-1 small\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            height: \"70px\",\n            // margin: \"0px 5px\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}; //console.log(PostItem);\n// set show action to true so buttons would not show in single post\n\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostItemLarge.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","Spinner","MAX_LENGTH","PostItem","auth","profile","profiles","loading","post","_id","text","name","lname","articleImage","user","likes","comments","date","showActions","background","margin","maxWidth","borderRadius","display","flexDirection","height","alignItems","justifyContent","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst MAX_LENGTH = 150;\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  profile: { profiles, loading },\r\n  post: { _id, text, name, lname, articleImage, user, likes, comments, date },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='post-large bg-white'>\r\n          {/* Image post container */}\r\n          <div\r\n            style={{\r\n              background: \"#eee\",\r\n              margin: \"auto\",\r\n              maxWidth: \"80%\",\r\n              maxWidth: \"80%\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            <Link to={`/posts/${_id}/${articleImage}`}>\r\n              <img\r\n                // style={{ width: \"305px\", borderRadius: \"5px\" }}\r\n                className='postImageLarge'\r\n                src={`/img/${articleImage}`}\r\n                alt='...'\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            {/* message post  */}\r\n            <div>\r\n              <p className='m-1 small'>{text}</p>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                height: \"70px\",\r\n                // margin: \"0px 5px\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n//console.log(PostItem);\r\n// set show action to true so buttons would not show in single post\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}
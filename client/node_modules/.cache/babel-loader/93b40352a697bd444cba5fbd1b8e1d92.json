{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\layout\\\\Alert.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && //map is a function like a for loop bu returns something -> jsx\n//using map function requires a key in this case the id that was generated by uuid\nalerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `alert alert-${alert.alertType}`,\n  children: alert.msg\n}, alert.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this));\n\n_c = Alert;\nAlert.propTypes = {\n  //alerts initial state is an array and is passing an array.. so the proptype is array\n  alerts: PropTypes.array.isRequired\n}; //get the alert state\n//map redux state to props\n\nconst mapStateToProps = state => ({\n  //state.alert come from the state reducer from index.js\n  // calling this will get the current state from the reducer\n  alerts: state.alert\n}); //Connect get two props the\n// 1. state that  you want to map.. e.g get state from other alert\n// 2. object you want to use from actions and its props\n\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["D:/1App/client/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","alertType","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZA,MAAM,KAAK,IAAX,IACAA,MAAM,CAACC,MAAP,GAAgB,CADhB,IAEA;AACA;AACAD,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACd;AAAoB,EAAA,SAAS,EAAG,eAAcA,KAAK,CAACC,SAAU,EAA9D;AAAA,YACGD,KAAK,CAACE;AADT,GAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,QADF,CALF;;KAAMP,K;AAUNA,KAAK,CAACQ,SAAN,GAAkB;AAChB;AACAP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AAFR,CAAlB,C,CAKA;AACA;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChC;AACA;AACAX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AAHkB,CAAL,CAA7B,C,CAKA;AACA;AACA;;;AACA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  //map is a function like a for loop bu returns something -> jsx\r\n  //using map function requires a key in this case the id that was generated by uuid\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\nAlert.propTypes = {\r\n  //alerts initial state is an array and is passing an array.. so the proptype is array\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\n//get the alert state\r\n//map redux state to props\r\nconst mapStateToProps = state => ({\r\n  //state.alert come from the state reducer from index.js\r\n  // calling this will get the current state from the reducer\r\n  alerts: state.alert,\r\n});\r\n//Connect get two props the\r\n// 1. state that  you want to map.. e.g get state from other alert\r\n// 2. object you want to use from actions and its props\r\nexport default connect(mapStateToProps)(Alert);\r\n"]},"metadata":{},"sourceType":"module"}
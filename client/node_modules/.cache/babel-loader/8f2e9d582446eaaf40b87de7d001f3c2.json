{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\PostImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getimagePost } from \"../../actions/post\";\nimport PostItemLarge from \"../../components/posts/PostItemLarge\";\nimport CommentItem from \"../../components/post/CommentItem\";\nimport CommentForm from \"../../components/post/CommentForm\";\n\nconst ImagePost = ({\n  auth,\n  getimagePost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getimagePost(match.params.id, match.params.articleImage);\n  }, [getimagePost, match.params.id, match.params.articleImage]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dark-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\",\n          margin: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(PostItemLarge, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        postId: post._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: comment,\n          postId: post._id\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImagePost;\nImagePost.propTypes = {\n  getimagePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getimagePost\n})(ImagePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePost\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/PostImage.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getimagePost","PostItemLarge","CommentItem","CommentForm","ImagePost","auth","post","loading","match","params","id","articleImage","width","margin","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQL,EAAAA,YAAR;AAAsBM,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA5B;AAA+CC,EAAAA;AAA/C,CAAD,KAA4D;AAAA;;AAC5EZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,EAAkBF,KAAK,CAACC,MAAN,CAAaE,YAA/B,CAAZ;AACD,GAFQ,EAEN,CAACX,YAAD,EAAeQ,KAAK,CAACC,MAAN,CAAaC,EAA5B,EAAgCF,KAAK,CAACC,MAAN,CAAaE,YAA7C,CAFM,CAAT;AAIA,SAAOJ,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAZ;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,IAAI,CAACQ;AAA1B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGR,IAAI,CAACS,QAAL,CAAcC,GAAd,CAAkBC,OAAO,iBACxB,QAAC,WAAD;AAEE,UAAA,OAAO,EAAEA,OAFX;AAGE,UAAA,MAAM,EAAEX,IAAI,CAACQ;AAHf,WACOG,OAAO,CAACH,GADf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAqBD,CA1BD;;GAAMV,S;;KAAAA,S;AA4BNA,SAAS,CAACc,SAAV,GAAsB;AACpBlB,EAAAA,YAAY,EAAEH,SAAS,CAACsB,IAAV,CAAeC,UADT;AAEpBd,EAAAA,IAAI,EAAET,SAAS,CAACwB,MAAV,CAAiBD;AAFH,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,IAAI,EAAEiB,KAAK,CAACjB;AADoB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACwB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAA2CI,SAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getimagePost } from \"../../actions/post\";\r\nimport PostItemLarge from \"../../components/posts/PostItemLarge\";\r\nimport CommentItem from \"../../components/post/CommentItem\";\r\nimport CommentForm from \"../../components/post/CommentForm\";\r\n\r\nconst ImagePost = ({ auth, getimagePost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getimagePost(match.params.id, match.params.articleImage);\r\n  }, [getimagePost, match.params.id, match.params.articleImage]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className='dark-overlay'>\r\n        <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n          <PostItemLarge post={post} />\r\n        </div>\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n          {post.comments.map(comment => (\r\n            <CommentItem\r\n              key={comment._id}\r\n              comment={comment}\r\n              postId={post._id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImagePost.propTypes = {\r\n  getimagePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getimagePost })(ImagePost);\r\n"]},"metadata":{},"sourceType":"module"}
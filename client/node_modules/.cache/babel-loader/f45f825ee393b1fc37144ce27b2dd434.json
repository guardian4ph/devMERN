{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\post\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\"; //id in prop is the postid from actions\n\nconst CommentForm = ({\n  postId,\n  addComment\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      onSubmit: c => {\n        c.preventDefault();\n        addComment(postId, {\n          text\n        });\n        setText(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"5\",\n        placeholder: \"Leave Comment\",\n        value: text,\n        onChange: c => setText(c.target.value),\n        required: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-dark my-1\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  postId: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  addComment\n})(CommentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["D:/1App/client/src/components/post/CommentForm.js"],"names":["React","useState","PropTypes","connect","addComment","CommentForm","postId","text","setText","c","preventDefault","target","value","propTypes","func","isRequired","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUF,EAAAA;AAAV,CAAD,KAA4B;AAAA;;AAC9C,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,QAAQ,EAAEQ,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAN,QAAAA,UAAU,CAACE,MAAD,EAAS;AAAEC,UAAAA;AAAF,SAAT,CAAV;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OANH;AAAA,8BAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAC,GAHP;AAIE,QAAA,WAAW,EAAC,eAJd;AAKE,QAAA,KAAK,EAAED,IALT;AAME,QAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CANxB;AAOE,QAAA,QAAQ,MAPV;AAQE,QAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,cARF,eAkBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAmD,QAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3BD;;GAAMP,W;;KAAAA,W;AA6BNA,WAAW,CAACQ,SAAZ,GAAwB;AACtBT,EAAAA,UAAU,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADL;AAEtBT,EAAAA,MAAM,EAAEJ,SAAS,CAACc,MAAV,CAAiBD;AAFH,CAAxB;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA8BC,WAA9B,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\n//id in prop is the postid from actions\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={c => {\r\n          c.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Leave Comment'\r\n          value={text}\r\n          onChange={c => setText(c.target.value)}\r\n          required\r\n          autoFocus\r\n        ></textarea>\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n  postId: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident-form\\\\IncidentDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useCallback, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../../actions/alert\";\nimport { registerOpcen } from \"../../actions/opcen\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport MapStyles from \"../layout/MapStyles\";\nimport Moment from \"react-moment\";\nimport Geodcode from \"react-geocode\";\nimport Search from \"../../utils/searchMap\";\nimport Locate from \"../../utils/locateMap\";\nimport { clearIncident, submitIncident } from \"../../actions/incident\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: `250px`,\n  width: \"100%\",\n  borderRadius: \"5px\"\n};\nconst options = {\n  styles: MapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst IncidentDetails = ({\n  isAuthenticated,\n  incident: {\n    type,\n    loading\n  },\n  clearIncident,\n  submitIncident,\n  user\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    completeaddress: \"\",\n    city: \"\",\n    state: \"\",\n    area: \"\",\n    lat: \"\",\n    lng: \"\"\n  });\n  const {\n    completeaddress,\n    lat,\n    lng,\n    city,\n    state,\n    area\n  } = formData;\n  const [marker, setMarker] = useState({\n    lat: 10.3272994,\n    lng: 123.9431079\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(currentloc => {\n      const latlng = {\n        lat: currentloc.coords.latitude,\n        lng: currentloc.coords.longitude\n      };\n      setMarker(latlng);\n    });\n  }, []);\n  const [com_address, setAddress] = useState({\n    completeaddress: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\"\n  });\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  Geodcode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\n  const [selected, setSelected] = useState(null);\n\n  const getCity = addressArray => {\n    let city = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      if (addressArray[index].types[0] && \"administrative_area_level_2\" === addressArray[index].types[0]) {\n        city = addressArray[index].long_name;\n        return city;\n      }\n    }\n  };\n\n  const getArea = addressArray => {\n    let area = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      if (addressArray[index].types[0]) {\n        for (let j = 0; j < addressArray.length; j++) {\n          if (\"sublocality_level_1\" === addressArray[index].types[j] || \"locality\" === addressArray[index].types[j]) {\n            area = addressArray[index].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n\n  const getState = addressArray => {\n    let state = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && \"administrative_area_level_2\" === addressArray[index].types[0]) {\n          state = addressArray[index].long_name;\n          return state;\n        }\n      }\n    }\n  };\n\n  const onMapClick = useCallback(e => {\n    const latlng = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    };\n    setMarker(latlng);\n    console.log(\"On Map Click Set Marker\", marker);\n    panTo(latlng);\n    Geodcode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = getCity(addressArray),\n            state = getState(addressArray),\n            area = getArea(addressArray);\n      setAddress({\n        completeaddress: address ? address : \"\",\n        city: city ? city : \"\",\n        area: area ? area : \"\",\n        state: state ? city : \"\"\n      });\n    });\n  }, []);\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    Geodcode.fromLatLng(map.center.lat(), map.center.lng()).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = getCity(addressArray),\n            state = getState(addressArray),\n            area = getArea(addressArray);\n      setAddress({\n        completeaddress: address ? address : \"\",\n        city: city ? city : \"\",\n        area: area ? area : \"\",\n        state: state ? city : \"\"\n      });\n      setMarker({\n        lat: map.center.lat(),\n        lng: map.center.lng()\n      });\n    });\n  }, []);\n  const panTo = useCallback(({\n    lat,\n    lng\n  }) => {\n    setMarker({\n      lat,\n      lng\n    });\n    console.log(\"On panTo Set Marker\", marker);\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(16);\n    Geodcode.fromLatLng(lat, lng).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = getCity(addressArray),\n            state = getState(addressArray),\n            area = getArea(addressArray);\n      setAddress({\n        completeaddress: address ? address : \"\",\n        city: city ? city : \"\",\n        area: area ? area : \"\",\n        state: state ? city : \"\"\n      });\n    });\n  }, []);\n  if (loadError) return \"Error Loading Map\";\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 25\n  }, this); // if (com_address)\n\n  const onChange = async (c) => setFormData({ ...formData,\n    [c.target.type]: c.target.value\n  }); // const payload = new FormData();\n  // payload.append(\"user\", user);\n  // payload.append(\"type\", type);\n  // payload.append(\"completeaddress\", com_address.currentaddress);\n  // payload.append(\"city\", com_address.city);\n  // payload.append(\"area\", com_address.area);\n  // payload.append(\"state\", com_address.state);\n  // payload.append(\"lat\", marker.lat);\n  // payload.append(\"lng\", marker.lng);\n\n\n  const scompleteaddress = com_address.completeaddress;\n  const scity = com_address.city;\n  const sstate = com_address.state;\n  const sarea = com_address.area;\n  const slat = marker.lat;\n  const slng = marker.lng;\n\n  const onSubmit = async c => {\n    c.preventDefault();\n    submitIncident({\n      user,\n      type,\n      scompleteaddress,\n      scity,\n      sstate,\n      sarea,\n      slat,\n      slng\n    });\n  };\n\n  if (isAuthenticated) {// return <Redirect to={`/operation-center/${user._id}/${opcen._id}`} />;\n  } //   return <Redirect to={`/operation-center`} />;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        position: \"fixed\",\n        top: \"20%\",\n        height: \"90vh\",\n        width: \"640px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\",\n          background: \"#fff\",\n          borderRadius: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"large text-primary\",\n          children: \"Incident details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"18px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Send incident type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\" , \\\"\", type, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"... please verify the location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: c => onSubmit(c),\n          children: [/*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"block\",\n                flexDirection: \"row\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n                mapContainerStyle: mapContainerStyle,\n                zoom: 13,\n                center: marker,\n                options: options,\n                onClick: onMapClick,\n                onLoad: onMapLoad,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    position: \"relative\",\n                    justifyContent: \"space-between\",\n                    width: \"100%\",\n                    zIndex: \"1\",\n                    margin: \"1px 2px 2px 1px\",\n                    marginTop: \"2px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      position: \"absolute\",\n                      alignContent: \"center\",\n                      width: \"100%\",\n                      zIndex: \"1\",\n                      margin: \"1px 2px 2px 1px\",\n                      marginTop: \"2px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Search, {\n                      panTo: panTo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Locate, {\n                      panTo: panTo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Marker, {\n                  position: {\n                    lat: marker.lat,\n                    lng: marker.lng\n                  },\n                  icon: {\n                    url: \"/icons/map/pin.png\",\n                    scaledSize: new window.google.maps.Size(30, 30),\n                    origin: new window.google.maps.Point(0, 0),\n                    anchor: new window.google.maps.Point(15, 15)\n                  },\n                  onClick: () => {\n                    setSelected(marker);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n                  position: {\n                    lat: selected.lat,\n                    lng: selected.lng\n                  },\n                  onCloseClick: () => {\n                    setSelected(null);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"block\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: \"Close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \" Incident!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Date\", \" \", /*#__PURE__*/_jsxDEV(Moment, {\n                        fromNow: true,\n                        ago: \"LLLL\",\n                        children: selected.time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"completeaddress\",\n                  value: completeaddress,\n                  placeholder: com_address.completeaddress,\n                  onChange: c => onChange(c)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"form-text\",\n                  children: \" Incident location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"none\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    // style={{ display: \"none\" }}\n                    type: \"text\",\n                    name: \"city\",\n                    value: city,\n                    placeholder: com_address.city,\n                    onChange: c => onChange(c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text\",\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    // style={{ display: \"none\" }}\n                    type: \"text\",\n                    name: \"state\",\n                    value: state,\n                    placeholder: com_address.state,\n                    onChange: c => onChange(c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text\",\n                    children: \"State\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    // style={{ display: \"none\" }}\n                    type: \"text\",\n                    name: \"area\",\n                    value: area,\n                    placeholder: com_address.area,\n                    onChange: c => onChange(c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text\",\n                    children: \"Your area\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    // style={{ display: \"none\" }}\n                    type: \"text\",\n                    name: \"lat\",\n                    value: lat,\n                    placeholder: marker.lat,\n                    onChange: c => onChange(c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text\",\n                    children: \"Your latitude\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    // style={{ display: \"none\" }}\n                    type: \"text\",\n                    name: \"lng\",\n                    value: lng,\n                    placeholder: marker.lng,\n                    onChange: c => onChange(c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text\",\n                    children: \"Your longitude\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-full btn-primary\",\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn-full alert-danger\",\n            to: \"/posts\",\n            onClick: e => clearIncident(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IncidentDetails, \"JldcULLpYc9R6IK+gi2vuP6pMhs=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = IncidentDetails;\nIncidentDetails.propTypes = {\n  incident: PropTypes.object.isRequired,\n  submitIncident: PropTypes.func.isRequired,\n  clearIncident: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  incident: state.incident,\n  user: state.auth.user._id\n});\n\nconst mapDispatchToProps = {\n  clearIncident,\n  submitIncident\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IncidentDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"IncidentDetails\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident-form/IncidentDetails.js"],"names":["React","Fragment","useState","useRef","useCallback","useEffect","Redirect","Link","connect","setAlert","registerOpcen","PropTypes","Spinner","GoogleMap","useLoadScript","Marker","InfoWindow","MapStyles","Moment","Geodcode","Search","Locate","clearIncident","submitIncident","libraries","mapContainerStyle","height","width","borderRadius","options","styles","disableDefaultUI","zoomControl","IncidentDetails","isAuthenticated","incident","type","loading","user","formData","setFormData","completeaddress","city","state","area","lat","lng","marker","setMarker","navigator","geolocation","getCurrentPosition","currentloc","latlng","coords","latitude","longitude","com_address","setAddress","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","setApiKey","selected","setSelected","getCity","addressArray","index","length","types","long_name","getArea","j","getState","onMapClick","e","latLng","console","log","panTo","fromLatLng","then","response","address","results","formatted_address","address_components","dropRef","mapRef","onMapLoad","map","current","center","setZoom","onChange","c","target","value","scompleteaddress","scity","sstate","sarea","slat","slng","onSubmit","preventDefault","margin","position","top","padding","background","display","marginTop","flexDirection","justifyContent","zIndex","alignContent","url","scaledSize","window","google","maps","Size","origin","Point","anchor","time","propTypes","object","isRequired","func","mapStateToProps","auth","_id","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {\r\n  Fragment,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { registerOpcen } from \"../../actions/opcen\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport MapStyles from \"../layout/MapStyles\";\r\nimport Moment from \"react-moment\";\r\nimport Geodcode from \"react-geocode\";\r\nimport Search from \"../../utils/searchMap\";\r\nimport Locate from \"../../utils/locateMap\";\r\nimport { clearIncident, submitIncident } from \"../../actions/incident\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  height: `250px`,\r\n  width: \"100%\",\r\n  borderRadius: \"5px\",\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nconst IncidentDetails = ({\r\n  isAuthenticated,\r\n  incident: { type, loading },\r\n  clearIncident,\r\n  submitIncident,\r\n  user,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    completeaddress: \"\",\r\n\r\n    city: \"\",\r\n    state: \"\",\r\n    area: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n  });\r\n\r\n  const { completeaddress, lat, lng, city, state, area } = formData;\r\n  const [marker, setMarker] = useState({ lat: 10.3272994, lng: 123.9431079 });\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(currentloc => {\r\n      const latlng = {\r\n        lat: currentloc.coords.latitude,\r\n        lng: currentloc.coords.longitude,\r\n      };\r\n      setMarker(latlng);\r\n    });\r\n  }, []);\r\n\r\n  const [com_address, setAddress] = useState({\r\n    completeaddress: \"\",\r\n    city: \"\",\r\n    area: \"\",\r\n    state: \"\",\r\n  });\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  Geodcode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\r\n\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const getCity = addressArray => {\r\n    let city = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      if (\r\n        addressArray[index].types[0] &&\r\n        \"administrative_area_level_2\" === addressArray[index].types[0]\r\n      ) {\r\n        city = addressArray[index].long_name;\r\n        return city;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getArea = addressArray => {\r\n    let area = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      if (addressArray[index].types[0]) {\r\n        for (let j = 0; j < addressArray.length; j++) {\r\n          if (\r\n            \"sublocality_level_1\" === addressArray[index].types[j] ||\r\n            \"locality\" === addressArray[index].types[j]\r\n          ) {\r\n            area = addressArray[index].long_name;\r\n            return area;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getState = addressArray => {\r\n    let state = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      for (let index = 0; index < addressArray.length; index++) {\r\n        if (\r\n          addressArray[index].types[0] &&\r\n          \"administrative_area_level_2\" === addressArray[index].types[0]\r\n        ) {\r\n          state = addressArray[index].long_name;\r\n          return state;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onMapClick = useCallback(e => {\r\n    const latlng = { lat: e.latLng.lat(), lng: e.latLng.lng() };\r\n    setMarker(latlng);\r\n    console.log(\"On Map Click Set Marker\", marker);\r\n    panTo(latlng);\r\n\r\n    Geodcode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(response => {\r\n      const address = response.results[0].formatted_address,\r\n        addressArray = response.results[0].address_components,\r\n        city = getCity(addressArray),\r\n        state = getState(addressArray),\r\n        area = getArea(addressArray);\r\n\r\n      setAddress({\r\n        completeaddress: address ? address : \"\",\r\n        city: city ? city : \"\",\r\n        area: area ? area : \"\",\r\n        state: state ? city : \"\",\r\n      });\r\n    });\r\n  }, []);\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n  const mapRef = useRef();\r\n\r\n  const onMapLoad = useCallback(map => {\r\n    mapRef.current = map;\r\n\r\n    Geodcode.fromLatLng(map.center.lat(), map.center.lng()).then(response => {\r\n      const address = response.results[0].formatted_address,\r\n        addressArray = response.results[0].address_components,\r\n        city = getCity(addressArray),\r\n        state = getState(addressArray),\r\n        area = getArea(addressArray);\r\n\r\n      setAddress({\r\n        completeaddress: address ? address : \"\",\r\n        city: city ? city : \"\",\r\n        area: area ? area : \"\",\r\n        state: state ? city : \"\",\r\n      });\r\n\r\n      setMarker({ lat: map.center.lat(), lng: map.center.lng() });\r\n    });\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    setMarker({ lat, lng });\r\n    console.log(\"On panTo Set Marker\", marker);\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(16);\r\n\r\n    Geodcode.fromLatLng(lat, lng).then(response => {\r\n      const address = response.results[0].formatted_address,\r\n        addressArray = response.results[0].address_components,\r\n        city = getCity(addressArray),\r\n        state = getState(addressArray),\r\n        area = getArea(addressArray);\r\n\r\n      setAddress({\r\n        completeaddress: address ? address : \"\",\r\n        city: city ? city : \"\",\r\n        area: area ? area : \"\",\r\n        state: state ? city : \"\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  if (loadError) return \"Error Loading Map\";\r\n  if (!isLoaded) return <Spinner />;\r\n  // if (com_address)\r\n\r\n  const onChange = async c =>\r\n    setFormData({ ...formData, [c.target.type]: c.target.value });\r\n\r\n  // const payload = new FormData();\r\n  // payload.append(\"user\", user);\r\n  // payload.append(\"type\", type);\r\n\r\n  // payload.append(\"completeaddress\", com_address.currentaddress);\r\n  // payload.append(\"city\", com_address.city);\r\n  // payload.append(\"area\", com_address.area);\r\n  // payload.append(\"state\", com_address.state);\r\n  // payload.append(\"lat\", marker.lat);\r\n  // payload.append(\"lng\", marker.lng);\r\n\r\n  const scompleteaddress = com_address.completeaddress;\r\n  const scity = com_address.city;\r\n  const sstate = com_address.state;\r\n  const sarea = com_address.area;\r\n  const slat = marker.lat;\r\n  const slng = marker.lng;\r\n\r\n  const onSubmit = async c => {\r\n    c.preventDefault();\r\n    submitIncident({\r\n      user,\r\n      type,\r\n      scompleteaddress,\r\n      scity,\r\n      sstate,\r\n      sarea,\r\n      slat,\r\n      slng,\r\n    });\r\n  };\r\n  if (isAuthenticated) {\r\n    // return <Redirect to={`/operation-center/${user._id}/${opcen._id}`} />;\r\n  }\r\n  //   return <Redirect to={`/operation-center`} />;\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          position: \"fixed\",\r\n          top: \"20%\",\r\n          height: \"90vh\",\r\n          width: \"640px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            background: \"#fff\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <h1 className='large text-primary'>Incident details</h1>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"18px\",\r\n            }}\r\n          >\r\n            <p>Send incident type </p>\r\n            <h4> , \"{type}\"</h4> <p>... please verify the location.</p>\r\n          </div>\r\n          <form className='form' onSubmit={c => onSubmit(c)}>\r\n            <Fragment>\r\n              {/* google map redered here */}\r\n              <div style={{ display: \"block\", flexDirection: \"row\" }}>\r\n                <GoogleMap\r\n                  mapContainerStyle={mapContainerStyle}\r\n                  zoom={13}\r\n                  center={marker}\r\n                  options={options}\r\n                  onClick={onMapClick}\r\n                  onLoad={onMapLoad}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      position: \"relative\",\r\n\r\n                      justifyContent: \"space-between\",\r\n                      width: \"100%\",\r\n                      zIndex: \"1\",\r\n                      margin: \"1px 2px 2px 1px\",\r\n                      marginTop: \"2px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        position: \"absolute\",\r\n                        alignContent: \"center\",\r\n\r\n                        width: \"100%\",\r\n                        zIndex: \"1\",\r\n                        margin: \"1px 2px 2px 1px\",\r\n                        marginTop: \"2px\",\r\n                      }}\r\n                    >\r\n                      <Search panTo={panTo} />\r\n                      <Locate panTo={panTo} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Marker\r\n                    position={{\r\n                      lat: marker.lat,\r\n                      lng: marker.lng,\r\n                    }}\r\n                    icon={{\r\n                      url: \"/icons/map/pin.png\",\r\n                      scaledSize: new window.google.maps.Size(30, 30),\r\n                      origin: new window.google.maps.Point(0, 0),\r\n                      anchor: new window.google.maps.Point(15, 15),\r\n                    }}\r\n                    onClick={() => {\r\n                      setSelected(marker);\r\n                    }}\r\n                  />\r\n\r\n                  {selected ? (\r\n                    <InfoWindow\r\n                      position={{ lat: selected.lat, lng: selected.lng }}\r\n                      onCloseClick={() => {\r\n                        setSelected(null);\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"block\",\r\n                          alignContent: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <h4>Close</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <p> Incident!</p>\r\n                        </div>\r\n                        <p>\r\n                          Date{\" \"}\r\n                          <Moment fromNow ago='LLLL'>\r\n                            {selected.time}\r\n                          </Moment>\r\n                        </p>\r\n                      </div>\r\n                    </InfoWindow>\r\n                  ) : null}\r\n                </GoogleMap>\r\n\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    name='completeaddress'\r\n                    value={completeaddress}\r\n                    placeholder={com_address.completeaddress}\r\n                    onChange={c => onChange(c)}\r\n                  />\r\n                  <small className='form-text'> Incident location</small>\r\n\r\n                  <div style={{ display: \"none\" }}>\r\n                    <input\r\n                      // style={{ display: \"none\" }}\r\n                      type='text'\r\n                      name='city'\r\n                      value={city}\r\n                      placeholder={com_address.city}\r\n                      onChange={c => onChange(c)}\r\n                    />\r\n                    <small className='form-text'>City</small>\r\n\r\n                    <input\r\n                      // style={{ display: \"none\" }}\r\n                      type='text'\r\n                      name='state'\r\n                      value={state}\r\n                      placeholder={com_address.state}\r\n                      onChange={c => onChange(c)}\r\n                    />\r\n                    <small className='form-text'>State</small>\r\n                    <input\r\n                      // style={{ display: \"none\" }}\r\n                      type='text'\r\n                      name='area'\r\n                      value={area}\r\n                      placeholder={com_address.area}\r\n                      onChange={c => onChange(c)}\r\n                    />\r\n                    <small className='form-text'>Your area</small>\r\n                    <input\r\n                      // style={{ display: \"none\" }}\r\n                      type='text'\r\n                      name='lat'\r\n                      value={lat}\r\n                      placeholder={marker.lat}\r\n                      onChange={c => onChange(c)}\r\n                    />\r\n                    <small className='form-text'>Your latitude</small>\r\n                    <input\r\n                      // style={{ display: \"none\" }}\r\n                      type='text'\r\n                      name='lng'\r\n                      value={lng}\r\n                      placeholder={marker.lng}\r\n                      onChange={c => onChange(c)}\r\n                    />\r\n                    <small className='form-text'>Your longitude</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Fragment>\r\n            <input\r\n              className='btn-full btn-primary'\r\n              type='submit'\r\n              value='Send'\r\n            />\r\n            <Link\r\n              className='btn-full alert-danger'\r\n              to='/posts'\r\n              onClick={e => clearIncident()}\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nIncidentDetails.propTypes = {\r\n  incident: PropTypes.object.isRequired,\r\n  submitIncident: PropTypes.func.isRequired,\r\n  clearIncident: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incident: state.incident,\r\n  user: state.auth.user._id,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  clearIncident,\r\n  submitIncident,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncidentDetails);\r\n"]},"metadata":{},"sourceType":"module"}
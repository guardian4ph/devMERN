{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\posts\\\\PostItemLarge.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nconst MAX_LENGTH = 150;\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  profile: {\n    profiles,\n    loading\n  },\n  post: {\n    _id,\n    text,\n    name,\n    lname,\n    articleImage,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-large bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: text.length > MAX_LENGTH ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: [`${text.substring(0, MAX_LENGTH)}...`, \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${_id}/${articleImage}`,\n              children: \"see more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-1\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#eee\",\n            margin: \"auto\",\n            maxWidth: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${_id}/${articleImage}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              // style={{ width: \"305px\", borderRadius: \"5px\" }}\n              className: \"postImage\",\n              src: `/img/${articleImage}`,\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user}`,\n            children: profiles.length > 0 ? profiles.map(profile => {\n              if (profile.user._id === user) {\n                // <PostHeader key={profile._id} profile={profile} />;\n                // console.log(\" Profile\", profile._id);\n                return /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      height: \"70px\",\n                      margin: \"0px 1px\",\n                      alignItems: \"center\",\n                      padding: \"2%\",\n                      justifyContent: \"space-around\",\n                      borderBottom: \"1px solid #ddd\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" p\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"post-profile\",\n                        src: `/img/${profile.profilepic}`,\n                        alt: \"...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 31\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: \"65%\",\n                        marginLeft: \"20px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: \"flex\",\n                          flexDirection: \"row\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"p-11\",\n                          children: name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 33\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"p-11\",\n                          children: lname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 33\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"post-date p-11 \",\n                        children: [\" \", \"Posted \", /*#__PURE__*/_jsxDEV(Moment, {\n                          format: \"LLLL\",\n                          children: date\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 40\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: \"20%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: \"5%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-ellipsis-h\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this);\n              }\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-profile\",\n                src: `/img/Spotter.png`,\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}; //console.log(PostItem);\n// set show action to true so buttons would not show in single post\n\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["D:/1App/client/src/components/posts/PostItemLarge.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","Spinner","MAX_LENGTH","PostItem","auth","profile","profiles","loading","post","_id","text","name","lname","articleImage","user","likes","comments","date","showActions","length","substring","background","margin","maxWidth","map","display","flexDirection","height","alignItems","padding","justifyContent","borderBottom","profilepic","width","marginLeft","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst MAX_LENGTH = 150;\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  profile: { profiles, loading },\r\n  post: { _id, text, name, lname, articleImage, user, likes, comments, date },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='post-large bg-white'>\r\n          <div>\r\n            <div>\r\n              {text.length > MAX_LENGTH ? (\r\n                <div className='m-1'>\r\n                  {`${text.substring(0, MAX_LENGTH)}...`}{\" \"}\r\n                  <Link to={`/posts/${_id}/${articleImage}`}>see more</Link>\r\n                </div>\r\n              ) : (\r\n                <p className='m-1'>{text}</p>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                background: \"#eee\",\r\n                margin: \"auto\",\r\n                maxWidth: \"100%\",\r\n              }}\r\n            >\r\n              <Link to={`/posts/${_id}/${articleImage}`}>\r\n                <img\r\n                  // style={{ width: \"305px\", borderRadius: \"5px\" }}\r\n                  className='postImage'\r\n                  src={`/img/${articleImage}`}\r\n                  alt='...'\r\n                />\r\n              </Link>\r\n\r\n              {/* user details */}\r\n\r\n              <Link to={`/profile/${user}`}>\r\n                {/* map all profiles here */}\r\n                {profiles.length > 0 ? (\r\n                  profiles.map(profile => {\r\n                    if (profile.user._id === user) {\r\n                      // <PostHeader key={profile._id} profile={profile} />;\r\n                      // console.log(\" Profile\", profile._id);\r\n                      return (\r\n                        <Fragment>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              height: \"70px\",\r\n                              margin: \"0px 1px\",\r\n                              alignItems: \"center\",\r\n                              padding: \"2%\",\r\n                              justifyContent: \"space-around\",\r\n                              borderBottom: \"1px solid #ddd\",\r\n                            }}\r\n                          >\r\n                            <div className=' p'>\r\n                              <img\r\n                                className='post-profile'\r\n                                src={`/img/${profile.profilepic}`}\r\n                                alt='...'\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div\r\n                              style={{\r\n                                width: \"65%\",\r\n                                marginLeft: \"20px\",\r\n                              }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"row\",\r\n                                }}\r\n                              >\r\n                                <h4 className='p-11'>{name}</h4>{\" \"}\r\n                                <h4 className='p-11'>{lname}</h4>{\" \"}\r\n                              </div>\r\n\r\n                              <p className='post-date p-11 '>\r\n                                {\" \"}\r\n                                Posted <Moment format='LLLL'>{date}</Moment>\r\n                              </p>\r\n                            </div>\r\n                            <div style={{ width: \"20%\" }}></div>\r\n                            <div style={{ width: \"5%\" }}>\r\n                              <i\r\n                                className='fa fa-ellipsis-h'\r\n                                aria-hidden='true'\r\n                              ></i>\r\n                            </div>\r\n                          </div>\r\n                        </Fragment>\r\n                      );\r\n                    }\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <img\r\n                      className='post-profile'\r\n                      src={`/img/Spotter.png`}\r\n                      alt='...'\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n//console.log(PostItem);\r\n// set show action to true so buttons would not show in single post\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}
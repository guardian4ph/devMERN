{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\operation-center\\\\Opcens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getOpcens } from \"../../actions/opcen\";\n\nconst Opcens = ({\n  getOpcens,\n  match,\n  opcen: {\n    opcens,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getOpcens(match.params.id);\n  }, [getOpcens, match.params.id]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 34\n  }, this);\n};\n\n_s(Opcens, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Opcens;\nOpcens.propTypes = {\n  getOpcens: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  opcen: state.opcen\n});\n\nexport default connect(mapStateToProps, {\n  getOpcens\n})(Opcens);\n\nvar _c;\n\n$RefreshReg$(_c, \"Opcens\");","map":{"version":3,"sources":["D:/1App/client/src/components/operation-center/Opcens.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getOpcens","Opcens","match","opcen","opcens","loading","params","id","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA,SAAF;AAAaE,EAAAA,KAAb;AAAoBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAA3B,CAAD,KAAsD;AAAA;;AACnET,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAT;AACD,GAFQ,EAEN,CAACP,SAAD,EAAYE,KAAK,CAACI,MAAN,CAAaC,EAAzB,CAFM,CAAT;AAGA,SAAOF,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/B;AACD,CALD;;GAAMJ,M;;KAAAA,M;AAONA,MAAM,CAACO,SAAP,GAAmB;AACjBR,EAAAA,SAAS,EAAEH,SAAS,CAACY,IAAV,CAAeC;AADT,CAAnB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,KAAK,EAAES,KAAK,CAACT;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,MAAxC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getOpcens } from \"../../actions/opcen\";\r\n\r\nconst Opcens = ({ getOpcens, match, opcen: { opcens, loading } }) => {\r\n  useEffect(() => {\r\n    getOpcens(match.params.id);\r\n  }, [getOpcens, match.params.id]);\r\n  return loading ? <Spinner /> : <div>test</div>;\r\n};\r\n\r\nOpcens.propTypes = {\r\n  getOpcens: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  opcen: state.opcen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOpcens })(Opcens);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1App\\\\client\\\\src\\\\components\\\\incident-form\\\\IncidentDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useCallback, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../../actions/alert\";\nimport { registerOpcen } from \"../../actions/opcen\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport MapStyles from \"../layout/MapStyles\";\nimport Moment from \"react-moment\";\nimport Geodcode from \"react-geocode\";\nimport Search from \"../../utils/searchMap\";\nimport Locate from \"../../utils/locateMap\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: `250px`,\n  width: \"100%\",\n  borderRadius: \"5px\"\n};\nconst options = {\n  styles: MapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst IncidentDetails = ({\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    type: \"\",\n    completeaddress: \"\",\n    lat: \"\",\n    lng: \"\",\n    city: \"\",\n    state: \"\",\n    area: \"\"\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(currentloc => {\n      const latlng = {\n        lat: currentloc.coords.latitude,\n        lng: currentloc.coords.longitude\n      };\n      setMarker(latlng);\n    });\n  }, []);\n  const [marker, setMarker] = useState({\n    lat: 10.336425,\n    lng: 123.90789\n  });\n  const [com_address, setAddress] = useState({\n    currentaddress: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\"\n  });\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  Geodcode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\n  const [selected, setSelected] = useState(null);\n\n  const getCity = addressArray => {\n    let city = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      if (addressArray[index].types[0] && \"administrative_area_level_2\" === addressArray[index].types[0]) {\n        city = addressArray[index].long_name;\n        return city;\n      }\n    }\n  };\n\n  const getArea = addressArray => {\n    let area = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      if (addressArray[index].types[0]) {\n        for (let j = 0; j < addressArray.length; j++) {\n          if (\"sublocality_level_1\" === addressArray[index].types[j] || \"locality\" === addressArray[index].types[j]) {\n            area = addressArray[index].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n\n  const getState = addressArray => {\n    let state = \"\";\n\n    for (let index = 0; index < addressArray.length; index++) {\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && \"administrative_area_level_2\" === addressArray[index].types[0]) {\n          state = addressArray[index].long_name;\n          return state;\n        }\n      }\n    }\n  };\n\n  const onMapClick = useCallback(e => {\n    const latlng = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    };\n    setMarker(latlng);\n    panTo(latlng);\n    Geodcode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = getCity(addressArray),\n            state = getState(addressArray),\n            area = getArea(addressArray);\n      setAddress({\n        currentaddress: address ? address : \"\",\n        city: city ? city : \"\",\n        area: area ? area : \"\",\n        state: state ? city : \"\"\n      });\n    });\n  }, []);\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    Geodcode.fromLatLng(map.center.lat(), map.center.lng()).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = getCity(addressArray),\n            state = getState(addressArray),\n            area = getArea(addressArray);\n      setAddress({\n        currentaddress: address ? address : \"\",\n        city: city ? city : \"\",\n        area: area ? area : \"\",\n        state: state ? city : \"\"\n      });\n      setMarker({\n        lat: map.center.lat(),\n        lng: map.center.lng()\n      });\n      console.log(\"on map load\", marker);\n    });\n  }, []);\n  const panTo = useCallback(({\n    lat,\n    lng\n  }) => {\n    setMarker({\n      lat,\n      lng\n    });\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n  if (loadError) return \"Error Loading Map\";\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 25\n  }, this); // if (com_address)\n\n  const {\n    type,\n    completeaddress,\n    lat,\n    lng,\n    city,\n    state,\n    area\n  } = formData;\n\n  const onChange = async (c) => setFormData({ ...formData,\n    [c.target.type]: c.target.value\n  });\n\n  const onSubmit = async c => {\n    c.preventDefault();\n    registerOpcen({\n      type,\n      completeaddress,\n      lat,\n      lng,\n      city,\n      state,\n      area\n    });\n  };\n\n  if (isAuthenticated) {// return <Redirect to={`/operation-center/${user._id}/${opcen._id}`} />;\n  } //   return <Redirect to={`/operation-center`} />;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\",\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        margin: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Incident Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-building-o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), \" Operation Center Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: c => onSubmit(c),\n        children: [/*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"block\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n              mapContainerStyle: mapContainerStyle,\n              zoom: 13,\n              center: marker,\n              options: options,\n              onClick: onMapClick,\n              onLoad: onMapLoad,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  position: \"relative\",\n                  justifyContent: \"space-between\",\n                  width: \"100%\",\n                  zIndex: \"1\",\n                  margin: \"1px 2px 2px 1px\",\n                  marginTop: \"2px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    position: \"absolute\",\n                    alignContent: \"center\",\n                    width: \"100%\",\n                    zIndex: \"1\",\n                    margin: \"1px 2px 2px 1px\",\n                    marginTop: \"2px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Search, {\n                    panTo: panTo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Marker, {\n                position: {\n                  lat: marker.lat,\n                  lng: marker.lng\n                },\n                icon: {\n                  url: \"/icons/map/pin.png\",\n                  scaledSize: new window.google.maps.Size(30, 30),\n                  origin: new window.google.maps.Point(0, 0),\n                  anchor: new window.google.maps.Point(15, 15)\n                },\n                onClick: () => {\n                  setSelected(marker);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n                position: {\n                  lat: selected.lat,\n                  lng: selected.lng\n                },\n                onCloseClick: () => {\n                  setSelected(null);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"block\",\n                    alignContent: \"center\",\n                    justifyContent: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \" Incident!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Date\", \" \", /*#__PURE__*/_jsxDEV(Moment, {\n                      fromNow: true,\n                      ago: \"LLLL\",\n                      children: selected.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"completeaddress\",\n                value: completeaddress,\n                placeholder: com_address.currentaddress,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \" Current location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{ display: \"none\" }}\n                type: \"text\",\n                name: \"city\",\n                value: city,\n                placeholder: com_address.city,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{ display: \"none\" }}\n                type: \"text\",\n                name: \"state\",\n                value: state,\n                placeholder: com_address.state,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{ display: \"none\" }}\n                type: \"text\",\n                name: \"area\",\n                value: area,\n                placeholder: com_address.area,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"Your area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{ display: \"none\" }}\n                type: \"text\",\n                name: \"lat\",\n                value: lat,\n                placeholder: marker.lat,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"Your latitude\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{ display: \"none\" }}\n                type: \"text\",\n                name: \"lng\",\n                value: lng,\n                placeholder: marker.lng,\n                onChange: c => onChange(c)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"Your longitude\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn-full alert-danger\",\n          type: \"submit\",\n          value: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IncidentDetails, \"bnzVirSAu8rFLfcwsuf7Z6Bq2g8=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = IncidentDetails;\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(IncidentDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"IncidentDetails\");","map":{"version":3,"sources":["D:/1App/client/src/components/incident-form/IncidentDetails.js"],"names":["React","Fragment","useState","useRef","useCallback","useEffect","Redirect","connect","setAlert","registerOpcen","PropTypes","Spinner","GoogleMap","useLoadScript","Marker","InfoWindow","MapStyles","Moment","Geodcode","Search","Locate","libraries","mapContainerStyle","height","width","borderRadius","options","styles","disableDefaultUI","zoomControl","IncidentDetails","isAuthenticated","formData","setFormData","type","completeaddress","lat","lng","city","state","area","navigator","geolocation","getCurrentPosition","currentloc","latlng","coords","latitude","longitude","setMarker","marker","com_address","setAddress","currentaddress","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","setApiKey","selected","setSelected","getCity","addressArray","index","length","types","long_name","getArea","j","getState","onMapClick","e","latLng","panTo","fromLatLng","then","response","address","results","formatted_address","address_components","dropRef","mapRef","onMapLoad","map","current","center","console","log","setZoom","onChange","c","target","value","onSubmit","preventDefault","padding","background","margin","display","flexDirection","position","justifyContent","zIndex","marginTop","alignContent","url","scaledSize","window","google","maps","Size","origin","Point","anchor","time","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,QAMO,OANP;AAOA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAG,OADe;AAExBC,EAAAA,KAAK,EAAE,MAFiB;AAGxBC,EAAAA,YAAY,EAAE;AAHU,CAA1B;AAMA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEX,SADM;AAEdY,EAAAA,gBAAgB,EAAE,IAFJ;AAGdC,EAAAA,WAAW,EAAE;AAHC,CAAhB;;AAKA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC;AACvCgC,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,eAAe,EAAE,EAFsB;AAGvCC,IAAAA,GAAG,EAAE,EAHkC;AAIvCC,IAAAA,GAAG,EAAE,EAJkC;AAKvCC,IAAAA,IAAI,EAAE,EALiC;AAMvCC,IAAAA,KAAK,EAAE,EANgC;AAOvCC,IAAAA,IAAI,EAAE;AAPiC,GAAD,CAAxC;AAUAnC,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,UAAU,IAAI;AACrD,YAAMC,MAAM,GAAG;AACbT,QAAAA,GAAG,EAAEQ,UAAU,CAACE,MAAX,CAAkBC,QADV;AAEbV,QAAAA,GAAG,EAAEO,UAAU,CAACE,MAAX,CAAkBE;AAFV,OAAf;AAIAC,MAAAA,SAAS,CAACJ,MAAD,CAAT;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAM,CAACK,MAAD,EAASD,SAAT,IAAsB/C,QAAQ,CAAC;AAAEkC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACc,WAAD,EAAcC,UAAd,IAA4BlD,QAAQ,CAAC;AACzCmD,IAAAA,cAAc,EAAE,EADyB;AAEzCf,IAAAA,IAAI,EAAE,EAFmC;AAGzCE,IAAAA,IAAI,EAAE,EAHmC;AAIzCD,IAAAA,KAAK,EAAE;AAJkC,GAAD,CAA1C;AAOA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0B1C,aAAa,CAAC;AAC5C2C,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADc;AAE5CtC,IAAAA;AAF4C,GAAD,CAA7C;AAKAH,EAAAA,QAAQ,CAAC0C,SAAT,CAAmBH,OAAO,CAACC,GAAR,CAAYC,6BAA/B;AAEA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0B5D,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAM6D,OAAO,GAAGC,YAAY,IAAI;AAC9B,QAAI1B,IAAI,GAAG,EAAX;;AACA,SAAK,IAAI2B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,YAAY,CAACE,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,UACED,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0B,CAA1B,KACA,kCAAkCH,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0B,CAA1B,CAFpC,EAGE;AACA7B,QAAAA,IAAI,GAAG0B,YAAY,CAACC,KAAD,CAAZ,CAAoBG,SAA3B;AACA,eAAO9B,IAAP;AACD;AACF;AACF,GAXD;;AAaA,QAAM+B,OAAO,GAAGL,YAAY,IAAI;AAC9B,QAAIxB,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIyB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,YAAY,CAACE,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,UAAID,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0B,CAA1B,CAAJ,EAAkC;AAChC,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACE,MAAjC,EAAyCI,CAAC,EAA1C,EAA8C;AAC5C,cACE,0BAA0BN,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0BG,CAA1B,CAA1B,IACA,eAAeN,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0BG,CAA1B,CAFjB,EAGE;AACA9B,YAAAA,IAAI,GAAGwB,YAAY,CAACC,KAAD,CAAZ,CAAoBG,SAA3B;AACA,mBAAO5B,IAAP;AACD;AACF;AACF;AACF;AACF,GAfD;;AAiBA,QAAM+B,QAAQ,GAAGP,YAAY,IAAI;AAC/B,QAAIzB,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI0B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,YAAY,CAACE,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,WAAK,IAAIA,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,YAAY,CAACE,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,YACED,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0B,CAA1B,KACA,kCAAkCH,YAAY,CAACC,KAAD,CAAZ,CAAoBE,KAApB,CAA0B,CAA1B,CAFpC,EAGE;AACA5B,UAAAA,KAAK,GAAGyB,YAAY,CAACC,KAAD,CAAZ,CAAoBG,SAA5B;AACA,iBAAO7B,KAAP;AACD;AACF;AACF;AACF,GAbD;;AAeA,QAAMiC,UAAU,GAAGpE,WAAW,CAACqE,CAAC,IAAI;AAClC,UAAM5B,MAAM,GAAG;AAAET,MAAAA,GAAG,EAAEqC,CAAC,CAACC,MAAF,CAAStC,GAAT,EAAP;AAAuBC,MAAAA,GAAG,EAAEoC,CAAC,CAACC,MAAF,CAASrC,GAAT;AAA5B,KAAf;AACAY,IAAAA,SAAS,CAACJ,MAAD,CAAT;AACA8B,IAAAA,KAAK,CAAC9B,MAAD,CAAL;AAEA3B,IAAAA,QAAQ,CAAC0D,UAAT,CAAoBH,CAAC,CAACC,MAAF,CAAStC,GAAT,EAApB,EAAoCqC,CAAC,CAACC,MAAF,CAASrC,GAAT,EAApC,EAAoDwC,IAApD,CAAyDC,QAAQ,IAAI;AACnE,YAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAAA,YACEjB,YAAY,GAAGc,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBE,kBADrC;AAAA,YAEE5C,IAAI,GAAGyB,OAAO,CAACC,YAAD,CAFhB;AAAA,YAGEzB,KAAK,GAAGgC,QAAQ,CAACP,YAAD,CAHlB;AAAA,YAIExB,IAAI,GAAG6B,OAAO,CAACL,YAAD,CAJhB;AAMAZ,MAAAA,UAAU,CAAC;AACTC,QAAAA,cAAc,EAAE0B,OAAO,GAAGA,OAAH,GAAa,EAD3B;AAETzC,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,EAFX;AAGTE,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,EAHX;AAITD,QAAAA,KAAK,EAAEA,KAAK,GAAGD,IAAH,GAAU;AAJb,OAAD,CAAV;AAMD,KAbD;AAcD,GAnB6B,EAmB3B,EAnB2B,CAA9B;AAoBA,QAAM6C,OAAO,GAAGhF,MAAM,EAAtB,CAvG+C,CAuGrB;;AAC1B,QAAMiF,MAAM,GAAGjF,MAAM,EAArB;AAEA,QAAMkF,SAAS,GAAGjF,WAAW,CAACkF,GAAG,IAAI;AACnCF,IAAAA,MAAM,CAACG,OAAP,GAAiBD,GAAjB;AAEApE,IAAAA,QAAQ,CAAC0D,UAAT,CAAoBU,GAAG,CAACE,MAAJ,CAAWpD,GAAX,EAApB,EAAsCkD,GAAG,CAACE,MAAJ,CAAWnD,GAAX,EAAtC,EAAwDwC,IAAxD,CAA6DC,QAAQ,IAAI;AACvE,YAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAAA,YACEjB,YAAY,GAAGc,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBE,kBADrC;AAAA,YAEE5C,IAAI,GAAGyB,OAAO,CAACC,YAAD,CAFhB;AAAA,YAGEzB,KAAK,GAAGgC,QAAQ,CAACP,YAAD,CAHlB;AAAA,YAIExB,IAAI,GAAG6B,OAAO,CAACL,YAAD,CAJhB;AAMAZ,MAAAA,UAAU,CAAC;AACTC,QAAAA,cAAc,EAAE0B,OAAO,GAAGA,OAAH,GAAa,EAD3B;AAETzC,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,EAFX;AAGTE,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,EAHX;AAITD,QAAAA,KAAK,EAAEA,KAAK,GAAGD,IAAH,GAAU;AAJb,OAAD,CAAV;AAOAW,MAAAA,SAAS,CAAC;AAAEb,QAAAA,GAAG,EAAEkD,GAAG,CAACE,MAAJ,CAAWpD,GAAX,EAAP;AAAyBC,QAAAA,GAAG,EAAEiD,GAAG,CAACE,MAAJ,CAAWnD,GAAX;AAA9B,OAAD,CAAT;AACAoD,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BxC,MAA3B;AACD,KAhBD;AAiBD,GApB4B,EAoB1B,EApB0B,CAA7B;AAsBA,QAAMyB,KAAK,GAAGvE,WAAW,CAAC,CAAC;AAAEgC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAkB;AAC1CY,IAAAA,SAAS,CAAC;AAAEb,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAT;AAEA+C,IAAAA,MAAM,CAACG,OAAP,CAAeZ,KAAf,CAAqB;AAAEvC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAArB;AACA+C,IAAAA,MAAM,CAACG,OAAP,CAAeI,OAAf,CAAuB,EAAvB;AACD,GALwB,EAKtB,EALsB,CAAzB;AAOA,MAAIpC,SAAJ,EAAe,OAAO,mBAAP;AACf,MAAI,CAACD,QAAL,EAAe,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP,CAxIgC,CAyI/C;;AAEA,QAAM;AAAEpB,IAAAA,IAAF;AAAQC,IAAAA,eAAR;AAAyBC,IAAAA,GAAzB;AAA8BC,IAAAA,GAA9B;AAAmCC,IAAAA,IAAnC;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,MAAyDR,QAA/D;;AAEA,QAAM4D,QAAQ,GAAG,OAAMC,CAAN,KACf5D,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAAC6D,CAAC,CAACC,MAAF,CAAS5D,IAAV,GAAiB2D,CAAC,CAACC,MAAF,CAASC;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAxF,IAAAA,aAAa,CAAC;AACZyB,MAAAA,IADY;AAEZC,MAAAA,eAFY;AAGZC,MAAAA,GAHY;AAIZC,MAAAA,GAJY;AAKZC,MAAAA,IALY;AAMZC,MAAAA,KANY;AAOZC,MAAAA;AAPY,KAAD,CAAb;AASD,GAXD;;AAYA,MAAIT,eAAJ,EAAqB,CACnB;AACD,GA9J8C,CA+J/C;AACA;;;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLmE,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,UAAU,EAAE,MAFP;AAGL1E,QAAAA,YAAY,EAAE,MAHT;AAIL2E,QAAAA,MAAM,EAAE;AAJH,OADT;AAAA,8BAQE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEP,CAAC,IAAIG,QAAQ,CAACH,CAAD,CAA9C;AAAA,gCACE,QAAC,QAAD;AAAA,iCAEE;AAAK,YAAA,KAAK,EAAE;AAAEQ,cAAAA,OAAO,EAAE,OAAX;AAAoBC,cAAAA,aAAa,EAAE;AAAnC,aAAZ;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,iBAAiB,EAAEhF,iBADrB;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,MAAM,EAAE4B,MAHV;AAIE,cAAA,OAAO,EAAExB,OAJX;AAKE,cAAA,OAAO,EAAE8C,UALX;AAME,cAAA,MAAM,EAAEa,SANV;AAAA,sCAQE;AACE,gBAAA,KAAK,EAAE;AACLgB,kBAAAA,OAAO,EAAE,MADJ;AAELE,kBAAAA,QAAQ,EAAE,UAFL;AAILC,kBAAAA,cAAc,EAAE,eAJX;AAKLhF,kBAAAA,KAAK,EAAE,MALF;AAMLiF,kBAAAA,MAAM,EAAE,GANH;AAOLL,kBAAAA,MAAM,EAAE,iBAPH;AAQLM,kBAAAA,SAAS,EAAE;AARN,iBADT;AAAA,uCAYE;AACE,kBAAA,KAAK,EAAE;AACLL,oBAAAA,OAAO,EAAE,MADJ;AAELE,oBAAAA,QAAQ,EAAE,UAFL;AAGLI,oBAAAA,YAAY,EAAE,QAHT;AAKLnF,oBAAAA,KAAK,EAAE,MALF;AAMLiF,oBAAAA,MAAM,EAAE,GANH;AAOLL,oBAAAA,MAAM,EAAE,iBAPH;AAQLM,oBAAAA,SAAS,EAAE;AARN,mBADT;AAAA,yCAYE,QAAC,MAAD;AAAQ,oBAAA,KAAK,EAAE/B;AAAf;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,sBARF,eAqCE,QAAC,MAAD;AACE,gBAAA,QAAQ,EAAE;AACRvC,kBAAAA,GAAG,EAAEc,MAAM,CAACd,GADJ;AAERC,kBAAAA,GAAG,EAAEa,MAAM,CAACb;AAFJ,iBADZ;AAKE,gBAAA,IAAI,EAAE;AACJuE,kBAAAA,GAAG,EAAE,oBADD;AAEJC,kBAAAA,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC,CAFR;AAGJC,kBAAAA,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAHJ;AAIJC,kBAAAA,MAAM,EAAE,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,KAAvB,CAA6B,EAA7B,EAAiC,EAAjC;AAJJ,iBALR;AAWE,gBAAA,OAAO,EAAE,MAAM;AACbrD,kBAAAA,WAAW,CAACZ,MAAD,CAAX;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,sBArCF,EAqDGW,QAAQ,gBACP,QAAC,UAAD;AACE,gBAAA,QAAQ,EAAE;AAAEzB,kBAAAA,GAAG,EAAEyB,QAAQ,CAACzB,GAAhB;AAAqBC,kBAAAA,GAAG,EAAEwB,QAAQ,CAACxB;AAAnC,iBADZ;AAEE,gBAAA,YAAY,EAAE,MAAM;AAClByB,kBAAAA,WAAW,CAAC,IAAD,CAAX;AACD,iBAJH;AAAA,uCAME;AACE,kBAAA,KAAK,EAAE;AACLuC,oBAAAA,OAAO,EAAE,OADJ;AAELM,oBAAAA,YAAY,EAAE,QAFT;AAGLH,oBAAAA,cAAc,EAAE;AAHX,mBADT;AAAA,0CAOE;AAAA,2CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAPF,eAWE;AAAA,2CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAXF,eAcE;AAAA,uCACO,GADP,eAEE,QAAC,MAAD;AAAQ,sBAAA,OAAO,MAAf;AAAgB,sBAAA,GAAG,EAAC,MAApB;AAAA,gCACG3C,QAAQ,CAACwD;AADZ;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,sBADO,GA6BL,IAlFN;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAsFE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,iBAFP;AAGE,gBAAA,KAAK,EAAElF,eAHT;AAIE,gBAAA,WAAW,EAAEgB,WAAW,CAACE,cAJ3B;AAKE,gBAAA,QAAQ,EAAEwC,CAAC,IAAID,QAAQ,CAACC,CAAD;AALzB;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE;AACE;AACA,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAEvD,IAJT;AAKE,gBAAA,WAAW,EAAEa,WAAW,CAACb,IAL3B;AAME,gBAAA,QAAQ,EAAEuD,CAAC,IAAID,QAAQ,CAACC,CAAD;AANzB;AAAA;AAAA;AAAA;AAAA,sBATF,eAiBE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAmBE;AACE;AACA,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,KAAK,EAAEtD,KAJT;AAKE,gBAAA,WAAW,EAAEY,WAAW,CAACZ,KAL3B;AAME,gBAAA,QAAQ,EAAEsD,CAAC,IAAID,QAAQ,CAACC,CAAD;AANzB;AAAA;AAAA;AAAA;AAAA,sBAnBF,eA2BE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3BF,eA4BE;AACE;AACA,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAErD,IAJT;AAKE,gBAAA,WAAW,EAAEW,WAAW,CAACX,IAL3B;AAME,gBAAA,QAAQ,EAAEqD,CAAC,IAAID,QAAQ,CAACC,CAAD;AANzB;AAAA;AAAA;AAAA;AAAA,sBA5BF,eAoCE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCF,eAqCE;AACE;AACA,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,KAHP;AAIE,gBAAA,KAAK,EAAEzD,GAJT;AAKE,gBAAA,WAAW,EAAEc,MAAM,CAACd,GALtB;AAME,gBAAA,QAAQ,EAAEyD,CAAC,IAAID,QAAQ,CAACC,CAAD;AANzB;AAAA;AAAA;AAAA;AAAA,sBArCF,eA6CE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7CF,eA8CE;AACE;AACA,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,KAHP;AAIE,gBAAA,KAAK,EAAExD,GAJT;AAKE,gBAAA,WAAW,EAAEa,MAAM,CAACb,GALtB;AAME,gBAAA,QAAQ,EAAEwD,CAAC,IAAID,QAAQ,CAACC,CAAD;AANzB;AAAA;AAAA;AAAA;AAAA,sBA9CF,eAsDE;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,eAmJE;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAyC,UAAA,IAAI,EAAC,QAA9C;AAAuD,UAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAnJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsKD,CAxUD;;GAAM/D,e;UA6B4BjB,a;;;KA7B5BiB,e;;AA0UN,MAAMwF,eAAe,GAAG/E,KAAK,KAAK,EAAL,CAA7B;;AAEA,MAAMgF,kBAAkB,GAAG,EAA3B;AAEA,eAAehH,OAAO,CAAC+G,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzF,eAA7C,CAAf","sourcesContent":["import React, {\r\n  Fragment,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { registerOpcen } from \"../../actions/opcen\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport MapStyles from \"../layout/MapStyles\";\r\nimport Moment from \"react-moment\";\r\nimport Geodcode from \"react-geocode\";\r\nimport Search from \"../../utils/searchMap\";\r\nimport Locate from \"../../utils/locateMap\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  height: `250px`,\r\n  width: \"100%\",\r\n  borderRadius: \"5px\",\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nconst IncidentDetails = ({ isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    type: \"\",\r\n    completeaddress: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    area: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(currentloc => {\r\n      const latlng = {\r\n        lat: currentloc.coords.latitude,\r\n        lng: currentloc.coords.longitude,\r\n      };\r\n      setMarker(latlng);\r\n    });\r\n  }, []);\r\n\r\n  const [marker, setMarker] = useState({ lat: 10.336425, lng: 123.90789 });\r\n  const [com_address, setAddress] = useState({\r\n    currentaddress: \"\",\r\n    city: \"\",\r\n    area: \"\",\r\n    state: \"\",\r\n  });\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  Geodcode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\r\n\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const getCity = addressArray => {\r\n    let city = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      if (\r\n        addressArray[index].types[0] &&\r\n        \"administrative_area_level_2\" === addressArray[index].types[0]\r\n      ) {\r\n        city = addressArray[index].long_name;\r\n        return city;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getArea = addressArray => {\r\n    let area = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      if (addressArray[index].types[0]) {\r\n        for (let j = 0; j < addressArray.length; j++) {\r\n          if (\r\n            \"sublocality_level_1\" === addressArray[index].types[j] ||\r\n            \"locality\" === addressArray[index].types[j]\r\n          ) {\r\n            area = addressArray[index].long_name;\r\n            return area;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getState = addressArray => {\r\n    let state = \"\";\r\n    for (let index = 0; index < addressArray.length; index++) {\r\n      for (let index = 0; index < addressArray.length; index++) {\r\n        if (\r\n          addressArray[index].types[0] &&\r\n          \"administrative_area_level_2\" === addressArray[index].types[0]\r\n        ) {\r\n          state = addressArray[index].long_name;\r\n          return state;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onMapClick = useCallback(e => {\r\n    const latlng = { lat: e.latLng.lat(), lng: e.latLng.lng() };\r\n    setMarker(latlng);\r\n    panTo(latlng);\r\n\r\n    Geodcode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(response => {\r\n      const address = response.results[0].formatted_address,\r\n        addressArray = response.results[0].address_components,\r\n        city = getCity(addressArray),\r\n        state = getState(addressArray),\r\n        area = getArea(addressArray);\r\n\r\n      setAddress({\r\n        currentaddress: address ? address : \"\",\r\n        city: city ? city : \"\",\r\n        area: area ? area : \"\",\r\n        state: state ? city : \"\",\r\n      });\r\n    });\r\n  }, []);\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n  const mapRef = useRef();\r\n\r\n  const onMapLoad = useCallback(map => {\r\n    mapRef.current = map;\r\n\r\n    Geodcode.fromLatLng(map.center.lat(), map.center.lng()).then(response => {\r\n      const address = response.results[0].formatted_address,\r\n        addressArray = response.results[0].address_components,\r\n        city = getCity(addressArray),\r\n        state = getState(addressArray),\r\n        area = getArea(addressArray);\r\n\r\n      setAddress({\r\n        currentaddress: address ? address : \"\",\r\n        city: city ? city : \"\",\r\n        area: area ? area : \"\",\r\n        state: state ? city : \"\",\r\n      });\r\n\r\n      setMarker({ lat: map.center.lat(), lng: map.center.lng() });\r\n      console.log(\"on map load\", marker);\r\n    });\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    setMarker({ lat, lng });\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(15);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error Loading Map\";\r\n  if (!isLoaded) return <Spinner />;\r\n  // if (com_address)\r\n\r\n  const { type, completeaddress, lat, lng, city, state, area } = formData;\r\n\r\n  const onChange = async c =>\r\n    setFormData({ ...formData, [c.target.type]: c.target.value });\r\n\r\n  const onSubmit = async c => {\r\n    c.preventDefault();\r\n    registerOpcen({\r\n      type,\r\n      completeaddress,\r\n      lat,\r\n      lng,\r\n      city,\r\n      state,\r\n      area,\r\n    });\r\n  };\r\n  if (isAuthenticated) {\r\n    // return <Redirect to={`/operation-center/${user._id}/${opcen._id}`} />;\r\n  }\r\n  //   return <Redirect to={`/operation-center`} />;\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n          background: \"#fff\",\r\n          borderRadius: \"10px\",\r\n          margin: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 className='large text-primary'>Incident Details</h1>\r\n        <p className='lead'>\r\n          <i className='fa fa-building-o'></i> Operation Center Information\r\n        </p>\r\n        <form className='form' onSubmit={c => onSubmit(c)}>\r\n          <Fragment>\r\n            {/* google map redered here */}\r\n            <div style={{ display: \"block\", flexDirection: \"row\" }}>\r\n              <GoogleMap\r\n                mapContainerStyle={mapContainerStyle}\r\n                zoom={13}\r\n                center={marker}\r\n                options={options}\r\n                onClick={onMapClick}\r\n                onLoad={onMapLoad}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    position: \"relative\",\r\n\r\n                    justifyContent: \"space-between\",\r\n                    width: \"100%\",\r\n                    zIndex: \"1\",\r\n                    margin: \"1px 2px 2px 1px\",\r\n                    marginTop: \"2px\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      position: \"absolute\",\r\n                      alignContent: \"center\",\r\n\r\n                      width: \"100%\",\r\n                      zIndex: \"1\",\r\n                      margin: \"1px 2px 2px 1px\",\r\n                      marginTop: \"2px\",\r\n                    }}\r\n                  >\r\n                    <Search panTo={panTo} />\r\n                    {/* <Locate panTo={panTo} /> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <Marker\r\n                  position={{\r\n                    lat: marker.lat,\r\n                    lng: marker.lng,\r\n                  }}\r\n                  icon={{\r\n                    url: \"/icons/map/pin.png\",\r\n                    scaledSize: new window.google.maps.Size(30, 30),\r\n                    origin: new window.google.maps.Point(0, 0),\r\n                    anchor: new window.google.maps.Point(15, 15),\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(marker);\r\n                  }}\r\n                />\r\n\r\n                {selected ? (\r\n                  <InfoWindow\r\n                    position={{ lat: selected.lat, lng: selected.lng }}\r\n                    onCloseClick={() => {\r\n                      setSelected(null);\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"block\",\r\n                        alignContent: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <h4>Close</h4>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <p> Incident!</p>\r\n                      </div>\r\n                      <p>\r\n                        Date{\" \"}\r\n                        <Moment fromNow ago='LLLL'>\r\n                          {selected.time}\r\n                        </Moment>\r\n                      </p>\r\n                    </div>\r\n                  </InfoWindow>\r\n                ) : null}\r\n              </GoogleMap>\r\n\r\n              <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='completeaddress'\r\n                  value={completeaddress}\r\n                  placeholder={com_address.currentaddress}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'> Current location</small>\r\n                <input\r\n                  // style={{ display: \"none\" }}\r\n                  type='text'\r\n                  name='city'\r\n                  value={city}\r\n                  placeholder={com_address.city}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'>City</small>\r\n\r\n                <input\r\n                  // style={{ display: \"none\" }}\r\n                  type='text'\r\n                  name='state'\r\n                  value={state}\r\n                  placeholder={com_address.state}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'>State</small>\r\n                <input\r\n                  // style={{ display: \"none\" }}\r\n                  type='text'\r\n                  name='area'\r\n                  value={area}\r\n                  placeholder={com_address.area}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'>Your area</small>\r\n                <input\r\n                  // style={{ display: \"none\" }}\r\n                  type='text'\r\n                  name='lat'\r\n                  value={lat}\r\n                  placeholder={marker.lat}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'>Your latitude</small>\r\n                <input\r\n                  // style={{ display: \"none\" }}\r\n                  type='text'\r\n                  name='lng'\r\n                  value={lng}\r\n                  placeholder={marker.lng}\r\n                  onChange={c => onChange(c)}\r\n                />\r\n                <small className='form-text'>Your longitude</small>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n          <input className='btn-full alert-danger' type='submit' value='Send' />\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncidentDetails);\r\n"]},"metadata":{},"sourceType":"module"}